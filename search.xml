<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue3 入门基础（一）</title>
      <link href="/2021/08/02/vue3-base/"/>
      <url>/2021/08/02/vue3-base/</url>
      
        <content type="html"><![CDATA[<h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>在项目目录下打开终端，输入：<br><code>vue create &lt;项目名&gt;</code></p><p>选择 Vue 3：<br><img src="https://img-blog.csdnimg.cn/36c10638ca614a319e330f9721cc70cb.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><p>项目自动创建好之后，根据提示的命令运行项目：<br><img src="https://img-blog.csdnimg.cn/cf5d4fd18acc46caa47f6cb1127cd300.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><p>运行完成后 Ctrl + 单击链接打开运行项目：<br><img src="https://img-blog.csdnimg.cn/bf6f737a17da447ba3a6c4db52cd1fc5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>网页界面如下：<br><img src="https://img-blog.csdnimg.cn/3c704219879b421e9377db49044ade71.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2><h3 id="插值"><a href="#插值" class="headerlink" title="插值"></a>插值</h3><h4 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h4><p>数据绑定最常见的形式就是使用“Mustache”语法 (双大括号) 的文本插值：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Message: {{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  name<span class="token punctuation">:</span> <span class="token string">'App'</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      msg<span class="token punctuation">:</span> <span class="token string">'我是插值-文本'</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token selector"><span class="token id">#app</span> </span><span class="token punctuation">{</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> Avenir, Helvetica, Arial, sans-serif<span class="token punctuation">;</span>  <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>  <span class="token property">-moz-osx-font-smoothing</span><span class="token punctuation">:</span> grayscale<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#2c3e50</span><span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">60</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><p>Mustache 标签将会被替代为对应组件实例中 <code>msg</code> property 的值。无论何时，绑定的组件实例上 msg property 发生了改变，插值处的内容都会更新。</p><h4 id="原始-HTML"><a href="#原始-HTML" class="headerlink" title="原始 HTML"></a>原始 HTML</h4><p>双大括号会将数据解释为普通文本，而非 HTML 代码。为了输出真正的 HTML，你需要使用 <code>v-html</code> 指令：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Using v-html directive: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rawHtml<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  name<span class="token punctuation">:</span> <span class="token string">'App'</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      rawHtml<span class="token punctuation">:</span> <span class="token string">'&lt;span style="color: red">我是插值-原始HTML&lt;/span>'</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token selector"><span class="token id">#app</span> </span><span class="token punctuation">{</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> Avenir, Helvetica, Arial, sans-serif<span class="token punctuation">;</span>  <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>  <span class="token property">-moz-osx-font-smoothing</span><span class="token punctuation">:</span> grayscale<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#2c3e50</span><span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">60</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><p>这个 span 的内容将会被替换成为 property 值 <code>rawHtml</code>，直接作为 HTML——会忽略解析 property 值中的数据绑定。</p><p>注意，你不能使用 v-html 来复合局部模板，因为 Vue 不是基于字符串的模板引擎。反之，对于用户界面 (UI)，组件更适合作为可重用和可组合的基本单位。</p><blockquote><p>TIP：在你的站点上动态渲染任意的 HTML 是非常危险的，因为它很容易导致 XSS 攻击。请只对可信内容使用 HTML 插值，绝不要将用户提供的内容作为插值。</p></blockquote><h4 id="Attribute"><a href="#Attribute" class="headerlink" title="Attribute"></a>Attribute</h4><p>Mustache 语法不能在 HTML attribute 中使用 ，然而，可以使用 v-bind 指令：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>disabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>isButtonDisabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是插值-Attribute按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  name<span class="token punctuation">:</span> <span class="token string">'App'</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      isButtonDisabled<span class="token punctuation">:</span> <span class="token keyword">null</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token selector"><span class="token id">#app</span> </span><span class="token punctuation">{</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> Avenir, Helvetica, Arial, sans-serif<span class="token punctuation">;</span>  <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>  <span class="token property">-moz-osx-font-smoothing</span><span class="token punctuation">:</span> grayscale<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#2c3e50</span><span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">60</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><p>如果 <code>isButtonDisabled</code> 的值是 <code>null</code> 或 <code>undefined</code>，则 <code>disabled</code> attribute 甚至不会被包含在渲染出来的 <code>&lt;button&gt;</code> 元素中。</p><p>注意：可以把 <code>isButtonDisabled</code> 的值改为 <code>null</code> 或 <code>undefined</code> 或 <code>false</code> 或 <code>true</code> 看看变化；</p><hr><h5 id="attribute-和-property-的概念"><a href="#attribute-和-property-的概念" class="headerlink" title="attribute 和 property 的概念"></a>attribute 和 property 的概念</h5><p>attribute 和 property 是 Web 开发中，比较容易混淆的概念。</p><p>简单的说，attribute 是元素标签的属性，property 是元素对象的属性，例如：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test value<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">let</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'value'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// test value</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// test value</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><ul><li>input 的 <code>value</code> attribute 是通过标签里的 <code>value=“test value”</code> 定义的，可以通过<code>input.getAttribute(‘value’)</code> 获取，可以通过 <code>input.setAttribute(‘value’, ‘New Value’)</code> 更新</li><li>input 的 <code>value</code> property 可通过 <code>input.value</code> 获取和更新，初始值是与 attribute 中的赋值一致的。</li></ul><hr><h5 id="attribute-和-property-的绑定"><a href="#attribute-和-property-的绑定" class="headerlink" title="attribute 和 property 的绑定"></a>attribute 和 property 的绑定</h5><p>如果在最开始的时候，更新 attribute value 的值，property 的值也会随之改变。</p><p>但是更新 property value 的值（在文本框输入或给 input.value 赋新值 ），attribute 的值不会随之改变，而且此时再更新 attribute 的值，property 的值也不再随之改变。</p><p>这其实是脏值标记（dirty value flag）在起作用，dirty value flag 的初始值为 <code>false</code>，即 attribute value 的更新默认会改变对应的 property value，但是一旦用户交互修改了 property value，dirty value flag 的值就变为 <code>true</code>，即 attribute value 的更新就不会改变对应的 property value 了。</p><p>所以在实际项目中，我们一般都是在处理作为 property 的 value；</p><hr><h5 id="Vue-js-对-value-的处理"><a href="#Vue-js-对-value-的处理" class="headerlink" title="Vue.js 对 value 的处理"></a>Vue.js 对 value 的处理</h5><p><strong>一般情况使用 <code>:value</code></strong><br>Vue.js 的 <code>v-bind</code>，一般情况下是在处理 attribute，如果要作为 property 处理的话，需要加上 <code>.prop</code>。</p><p>不过，<code>v-bind:value</code> 却大都默认为处理 property 值，因为被强制转化了，例如：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>test value<span class="token punctuation">'</span><span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">let</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token punctuation">:</span> <span class="token string">'#input'</span><span class="token punctuation">,</span>  mounted <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'value'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// null</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// test value</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_vnode<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// {attrs: {id: "input"}, domProps: {value: "test value"}}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>可见，Vue.js 将 <code>value</code> 作为 VNode 的 <code>data</code> 中的 <code>domProps</code> 的属性，而不是 <code>attrs</code> 的属性，所以挂载后会成为作为 property 的 <code>value</code>。</p><p>在 Vue.js 源码中，强制转化 property 的处理如下：</p><pre class=" language-html"><code class="language-html">// src/compiler/parser/index.jsfunction processAttrs (el) {...        if ((modifiers &amp;&amp; modifiers.prop) || (          !el.component &amp;&amp; platformMustUseProp(el.tag, el.attrsMap.type, name)        )) {          addProp(el, name, value, list[i], isDynamic)        } else {          addAttr(el, name, value, list[i], isDynamic)        }</code></pre><p>其中 platformMustUseProp 在 web 平台的定义如下：</p><pre class=" language-html"><code class="language-html">// src/platforms/web/util/attrs.jsconst acceptValue = makeMap('input,textarea,option,select,progress')export const mustUseProp = (tag: string, type: ?string, attr: string): boolean => {  return (    (attr === 'value' &amp;&amp; acceptValue(tag)) &amp;&amp; type !== 'button' ||    (attr === 'selected' &amp;&amp; tag === 'option') ||    (attr === 'checked' &amp;&amp; tag === 'input') ||    (attr === 'muted' &amp;&amp; tag === 'video')  )}</code></pre><p>由上可知，类型不为 button 的 input，textarea，option，select，progress 的 <code>value</code> 会强制作为 property，而不需要设置为 <code>:value.prop</code>。</p><p>例如 textarea 标签，其本身其实并不支持 value attribute，所以以下代码中的 <code>value</code> 的值并不会显示在多行文本框中：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test value<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span></code></pre><p>但是在 Vue.js 中， 以下代码能成功绑定到 value property 并显示在多行文本框中：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>test value<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span></code></pre><p><strong>特殊情况使用 <code>:value.prop</code></strong><br>以上 Vue.js 源码需要注意的还有，强制作为 property， 还要满足 <code>!el.component</code>，即不为动态组件，因为动态组件的 el.component 的值为其 <code>is attribute</code> 的值</p><p>即动态组件的的 <code>v-bind</code> 默认都是作为 attribute 的，如果要作为 property，就要使用 <code>.prop</code>，例如：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span> <span class="token attr-name">:value.prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>test value<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>component</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>change<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Change<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">let</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>  data<span class="token punctuation">:</span> <span class="token punctuation">{</span>    element<span class="token punctuation">:</span> <span class="token string">'input'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>    change <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>element <span class="token operator">=</span> <span class="token string">'input'</span> <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>element <span class="token operator">?</span> <span class="token string">'textarea'</span> <span class="token punctuation">:</span> <span class="token string">'input'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>如果以上 component 中，删除 <code>:value.prop</code> 的 <code>.prop</code>，切换到 textarea 时，其值就不会显示在多行文本框中，可以在此页面点击切换标签查看。</p><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><ul><li>作为 attribute 和 property 的 <code>value</code> 的绑定关系会在用户交互更新值后失效；</li><li>Vue.js 一般使用 <code>:value</code> 即可让 <code>value</code> 作为 property；</li><li>Vue.js 动态模版需要使用 <code>:value.prop</code> 才可让 <code>value</code> 作为 property；</li></ul><h4 id="使用-Javascript-表达式"><a href="#使用-Javascript-表达式" class="headerlink" title="使用 Javascript 表达式"></a>使用 Javascript 表达式</h4><p>迄今为止，在我们的模板中，我们一直都只绑定简单的 property 键值。但实际上，对于所有的数据绑定，Vue.js 都提供了完全的 JavaScript 表达式支持。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  {{number / 10}}  {{isOK ? '确定' : '取消'}}  {{text.split(',').reverse().join(',')}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  name<span class="token punctuation">:</span> <span class="token string">'App'</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>        number<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>        isOK<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        text<span class="token punctuation">:</span> <span class="token string">'123,456'</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token selector"><span class="token id">#app</span> </span><span class="token punctuation">{</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> Avenir, Helvetica, Arial, sans-serif<span class="token punctuation">;</span>  <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>  <span class="token property">-moz-osx-font-smoothing</span><span class="token punctuation">:</span> grayscale<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#2c3e50</span><span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">60</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h3><p>指令 (Directives) 是带有 <code>v-</code> 前缀的特殊 attribute。指令 attribute 的值预期是单个 JavaScript 表达式 (<code>v-for</code> 和 <code>v-on</code> 是例外情况，稍后我们再讨论)。指令的职责是，当表达式的值改变时，将其产生的连带影响，响应式地作用于 DOM。</p><p>举个例子：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>seen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>现在你看到我了<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p>这里，<code>v-if</code> 指令将根据表达式 <code>seen</code> 的值的真假来插入/移除 <code>&lt;p&gt;</code> 元素。</p><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p><code>v-bind</code> 指令可以用于响应式地更新 HTML attribute：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>在这里 <code>href</code> 是参数，告知 <code>v-bind</code> 指令将该元素的 <code>href</code> attribute 与表达式 <code>url</code> 的值绑定。</p><p><code>v-on</code> 指令用于监听 DOM 事件：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>doSomething<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>在这里参数是监听的事件名。</p><h4 id="动态参数"><a href="#动态参数" class="headerlink" title="动态参数"></a>动态参数</h4><p>动态参数就是在指令参数中使用 JavaScript 表达式，方法是用方括号括起来：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>[attributeName]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>这里的 <code>attributeName</code> 会被作为一个 JavaScript 表达式进行动态求值，求得的值将会作为最终的参数来使用。例如，如果你的组件实例有一个 data property <code>attributeName</code>，其值为 <code>"href"</code>，那么这个绑定将等价于 <code>v-bind:href</code>。</p><p>同样地，你可以使用动态参数为一个动态的事件名绑定处理函数：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-on:</span>[eventName]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>doSomething<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>在这个示例中，当 <code>eventName</code> 的值为 <code>"focus"</code> 时，<code>v-on:[eventName]</code> 将等价于 <code>v-on:focus</code>；</p><h4 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h4><p>修饰符 (modifier) 是以半角句号 <code>.</code> 指明的特殊后缀，用于指出一个指令应该以特殊方式绑定。</p><p>指令原本就是很方便的东西，而指令修饰符会让指令变得更加方便。</p><p>语法：<code>指令名称:参数.修饰符 = 值</code>；</p><p>例：<code>v-bind:value.number = "msg"</code></p><p><strong>注意：</strong></p><ul><li>不同的指令有不同的参数，也有不同的修饰符；</li><li>有些指令是没有修饰符的；</li><li>某些指令直接的修饰符会重复，但是使用时需要去查看对应的指令的 api；</li></ul><p><strong>示例：</strong></p><p>实现修改 input 框里边的值后会在页面加载显示的功能：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>val<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span> {{val}} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">let</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span><span class="token punctuation">{</span>                val<span class="token punctuation">:</span><span class="token number">1</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><p>但是我们如果想要输入完且失去焦点后才加在到页面的话，我们就需要用到指令修饰符了：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model.lazy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>val<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><p>这时就可以完成上述需求。</p><p>再看一种场景：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        &lt;input type="text" v-model = "v1">        +        &lt;input type="text" v-model = "v2">        =        {{v1+v2}}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">let</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span><span class="token punctuation">{</span>                val<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>                v1<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>                v2<span class="token punctuation">:</span><span class="token number">1</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><p>浏览器反馈：<br><img src="https://img-blog.csdnimg.cn/b8485ae83102473887e659996860dde9.png"><br>我们这时如果在 input 框里修改 value 值后，等号后边会自动变为字符串拼接：<br><img src="https://img-blog.csdnimg.cn/d429c38bb8ec41e7b26f02c4c01913ed.png"><br>这时，我们只需要给 <code>v-model</code> 添加一个修饰符 <code>number</code> 就可以了：</p><pre class=" language-html"><code class="language-html">&lt;input type="text" v-model.number = "v1"> + &lt;input type="text" v-model.number = "v2"> = {{v1+v2}}</code></pre><p><img src="https://img-blog.csdnimg.cn/d724b9b848ce4968ade9c53727c905ef.png"><br><strong>补充</strong></p><p>修饰符是可以连用的！</p><p>例如：</p><pre class=" language-html"><code class="language-html">&lt;input type="text" v-model.number.lazy = "v1"> + &lt;input type="text" v-model.number.lazy = "v2"> = {{v1+v2}}</code></pre><h4 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h4><p>在面对我们想要用到指令去完成一些需求且内置指令处理不了的时候，我们可以制定一个自定义指令，根据我们的开发需求和开放场景来封装一个：</p><p>自定义指令分为全局指令与局部指令，区别仅在于有效范围：</p><ul><li>全局指令的有效范围：在整个 script 标签内可以通用</li><li>局部指令的有效范围：仅在于 vue 的实例化对象里边</li></ul><p>我们可以通过 input 框自动获取焦点这个案例来了解一下自定义指令：</p><p><strong>代码示例：</strong></p><pre class=" language-html"><code class="language-html">let app = new Vue({    el: "#app",    directives: {        focus: {            // 指令的定义            inserted: function (el) {                el.focus()            }        }    }});</code></pre><pre class=" language-html"><code class="language-html">// 注册一个全局自定义指令 `v-focus`Vue.directive('focus', {    // 当被绑定的元素插入到 DOM 中时……    inserted: function (el) {        // 聚焦元素        el.focus()    }})</code></pre><p>现在我们已经注册了一个全局的自定义指令，我们只需要在需要使用的元素里加上 <code>v-focus</code> 即可：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-focus</span><span class="token punctuation">></span></span> </code></pre><h3 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h3><h4 id="v-bind-缩写"><a href="#v-bind-缩写" class="headerlink" title="v-bind 缩写"></a>v-bind 缩写</h4><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 完整语法 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 缩写 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 动态参数的缩写 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:[key]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><h4 id="v-on-缩写"><a href="#v-on-缩写" class="headerlink" title="v-on 缩写"></a>v-on 缩写</h4><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 完整语法 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>doSomething<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 缩写 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>doSomething<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 动态参数的缩写 (2.6.0+) --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">@[event]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>doSomething<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>它们看起来可能与普通的 HTML 略有不同，但 <code>:</code> 与 <code>@</code> 对于 attribute 名来说都是合法字符，在所有支持 Vue 的浏览器都能被正确地解析。而且，它们不会出现在最终渲染的标记中。</p><h3 id="Data-Property-和方法"><a href="#Data-Property-和方法" class="headerlink" title="Data Property 和方法"></a>Data Property 和方法</h3><h4 id="Data-Property"><a href="#Data-Property" class="headerlink" title="Data Property"></a>Data Property</h4><p>组件的 <code>data</code> 选项是一个函数。Vue 在创建新组件实例的过程中调用此函数。它应该返回一个对象，然后 Vue 会通过响应性系统将其包裹起来，并以 <code>$data</code> 的形式存储在组件实例中。为方便起见，该对象的任何顶级 property 也直接通过组件实例暴露出来：</p><pre class=" language-html"><code class="language-html">const app = Vue.createApp({  data() {    return { count: 4 }  }})const vm = app.mount('#app')console.log(vm.$data.count) // => 4console.log(vm.count)       // => 4// 修改 vm.count 的值也会更新 $data.countvm.count = 5console.log(vm.$data.count) // => 5// 反之亦然vm.$data.count = 6console.log(vm.count) // => 6</code></pre><p>这些实例 property 仅在实例首次创建时被添加，所以你需要确保它们都在 <code>data</code> 函数返回的对象中。必要时，要对尚未提供所需值的 property 使用 <code>null</code>、<code>undefined</code> 或其他占位的值。</p><p>直接将不包含在 <code>data</code> 中的新 property 添加到组件实例是可行的。但由于该 property 不在背后的响应式 <code>$data</code> 对象内，所以 Vue 的响应性系统不会自动跟踪它。</p><p>Vue 使用 <code>$</code> 前缀通过组件实例暴露自己的内置 API。它还为内部 property 保留 <code>_</code> 前缀。你应该避免使用这两个字符开头的的顶级 <code>data</code> property 名称。</p><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><p>我们用 <code>methods</code> 选项向组件实例添加方法，它应该是一个包含所需方法的对象：</p><pre class=" language-html"><code class="language-html">const app = Vue.createApp({  data() {    return { count: 4 }  },  methods: {    increment() {      // `this` 指向该组件实例      this.count++    }  }})const vm = app.mount('#app')console.log(vm.count) // => 4vm.increment()console.log(vm.count) // => 5</code></pre><p>Vue 自动为 <code>methods</code> 绑定 <code>this</code>，以便于它始终指向组件实例。这将确保方法在用作事件监听或回调时保持正确的 <code>this</code> 指向。在定义 <code>methods</code> 时应避免使用箭头函数，因为这会阻止 Vue 绑定恰当的 <code>this</code> 指向。</p><p>这些 <code>methods</code> 和组件实例的其它所有 property 一样可以在组件的模板中被访问。在模板中，它们通常被当做事件监听使用：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>increment<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Up vote<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code></pre><p>在上面的例子中，点击 <code>&lt;button&gt;</code> 时，会调用 <code>increment</code> 方法。</p><p>也可以直接从模板中调用方法。</p><h5 id="防抖和节流"><a href="#防抖和节流" class="headerlink" title="防抖和节流"></a>防抖和节流</h5><p>Vue 没有内置支持防抖和节流，但可以使用 Lodash 等库来实现。</p><p>如果某个组件仅使用一次，可以在 <code>methods</code> 中直接应用防抖：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/lodash@4.17.20/lodash.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 用 Lodash 的防抖函数</span>      click<span class="token punctuation">:</span> _<span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// ... 响应点击 ...</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>但是，这种方法对于可复用组件有潜在的问题，因为它们都共享相同的防抖函数。为了使组件实例彼此独立，可以在生命周期钩子的 <code>created</code> 里添加该防抖函数：</p><pre class=" language-html"><code class="language-html">app.component('save-button', {  created() {    // 用 Lodash 的防抖函数    this.debouncedClick = _.debounce(this.click, 500)  },  unmounted() {    // 移除组件时，取消定时器    this.debouncedClick.cancel()  },  methods: {    click() {      // ... 响应点击 ...    }  },  template: `    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>debouncedClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      Save    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  `})</code></pre><h3 id="计算属性和侦听器"><a href="#计算属性和侦听器" class="headerlink" title="计算属性和侦听器"></a>计算属性和侦听器</h3><h4 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h4><p>模板内的表达式非常便利，但是设计它们的初衷是用于简单运算的。在模板中放入太多的逻辑会让模板过重且难以维护。</p><p>例如，有一个嵌套数组对象：</p><pre class=" language-html"><code class="language-html">Vue.createApp({  data() {    return {      author: {        name: 'John Doe',        books: [          'Vue 2 - Advanced Guide',          'Vue 3 - Basic Guide',          'Vue 4 - The Mystery'        ]      }    }  }})</code></pre><p>我们想根据 <code>author</code> 是否已经有一些书来显示不同的消息</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>computed-basics<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Has published books:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{ author.books.length > 0 ? 'Yes' : 'No' }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p>此时，模板不再是简单的和声明性的。你必须先看一下它，然后才能意识到它执行的计算取决于 <code>author.books</code>。如果要在模板中多次包含此计算，则问题会变得更糟。</p><p>所以，对于任何包含响应式数据的复杂逻辑，你都应该使用<strong>计算属性</strong>。</p><h5 id="基本例子"><a href="#基本例子" class="headerlink" title="基本例子"></a>基本例子</h5><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>computed-basics<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Has published books:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{ publishedBooksMessage }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><pre class=" language-html"><code class="language-html">Vue.createApp({  data() {    return {      author: {        name: 'John Doe',        books: [          'Vue 2 - Advanced Guide',          'Vue 3 - Basic Guide',          'Vue 4 - The Mystery'        ]      }    }  },  computed: {    // 计算属性的 getter    publishedBooksMessage() {      // `this` points to the vm instance      return this.author.books.length > 0 ? 'Yes' : 'No'    }  }}).mount('#computed-basics')</code></pre><p>运行结果如下：<br><img src="https://img-blog.csdnimg.cn/660dbe696deb467c8d85a421b5368639.png"><br>这里声明了一个计算属性 <code>publishedBooksMessage</code>。</p><p>尝试更改应用程序 <code>data</code> 中 <code>books</code> 数组的值，你将看到 <code>publishedBooksMessage</code> 如何相应地更改。</p><p>你可以像普通属性一样将数据绑定到模板中的计算属性。Vue 知道<code>vm.publishedBookMessage</code> 依赖于 <code>vm.author.books</code>，因此当 <code>vm.author.books</code> 发生改变时，所有依赖 <code>vm.publishedBookMessage</code> 绑定也会更新。而且最妙的是我们已经声明的方式创建了这个依赖关系：计算属性的 getter 函数没有副作用，这使得更易于测试和理解。</p><h5 id="计算属性缓存-vs-方法"><a href="#计算属性缓存-vs-方法" class="headerlink" title="计算属性缓存 vs 方法"></a>计算属性缓存 vs 方法</h5><p>我们可以通过在表达式中调用方法来达到同样的效果：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>{{ calculateBooksMessage() }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><pre class=" language-html"><code class="language-html">// 在组件中methods: {  calculateBooksMessage() {    return this.author.books.length > 0 ? 'Yes' : 'No'  }}</code></pre><p>我们可以将同一函数定义为一个方法而不是一个计算属性。两种方式的最终结果确实是完全相同的。然而，不同的是<strong>计算属性是基于它们的反应依赖关系缓存的</strong>。计算属性只在相关响应式依赖发生改变时它们才会重新求值。这就意味着只要 <code>author.books</code> 还没有发生改变，多次访问 <code>publishedBookMessage</code> 计算属性会立即返回之前的计算结果，而不必再次执行函数。</p><p>这也同样意味着下面的计算属性将不再更新，因为 Date.now () 不是响应式依赖：</p><pre class=" language-html"><code class="language-html">computed: {  now() {    return Date.now()  }}</code></pre><p>相比之下，每当触发重新渲染时，调用方法将总会再次执行函数。</p><p>我们为什么需要缓存？假设我们有一个性能开销比较大的计算属性 <code>list</code>，它需要遍历一个巨大的数组并做大量的计算。然后我们可能有其他的计算属性依赖于 <code>list</code>。如果没有缓存，我们将不可避免的多次执行 <code>list</code> 的 getter！如果你不希望有缓存，请用 <code>method</code> 来替代。</p><h5 id="计算属性的-Setter"><a href="#计算属性的-Setter" class="headerlink" title="计算属性的 Setter"></a>计算属性的 Setter</h5><p>计算属性默认只有 getter，不过在需要时你也可以提供一个 setter：</p><pre class=" language-html"><code class="language-html">// ...computed: {  fullName: {    // getter    get() {      return this.firstName + ' ' + this.lastName    },    // setter    set(newValue) {      const names = newValue.split(' ')      this.firstName = names[0]      this.lastName = names[names.length - 1]    }  }}// ...</code></pre><p>现在再运行 <code>vm.fullName = 'John Doe'</code> 时，setter 会被调用，<code>vm.firstName</code> 和 <code>vm.lastName</code> 也会相应地被更新。</p><h4 id="侦听器"><a href="#侦听器" class="headerlink" title="侦听器"></a>侦听器</h4><p>虽然计算属性在大多数情况下更合适，但有时也需要一个自定义的侦听器。这就是为什么 Vue 通过 <code>watch</code> 选项提供了一个更通用的方法，来响应数据的变化。当需要在数据变化时执行异步或开销较大的操作时，这个方式是最有用的。</p><p>例如：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>watch-example<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>    Ask a yes/no question:    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>question<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>{{ answer }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 因为 AJAX 库和通用工具的生态已经相当丰富，Vue 核心代码没有重复 --></span><span class="token comment" spellcheck="true">&lt;!-- 提供这些功能以保持精简。这也可以让你自由选择自己更熟悉的工具。 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/axios@0.12.0/dist/axios.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">const</span> watchExampleVM <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        question<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        answer<span class="token punctuation">:</span> <span class="token string">'Questions usually contain a question mark. ;-)'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    watch<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// whenever question changes, this function will run</span>      <span class="token function">question</span><span class="token punctuation">(</span>newQuestion<span class="token punctuation">,</span> oldQuestion<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>newQuestion<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAnswer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token function">getAnswer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>answer <span class="token operator">=</span> <span class="token string">'Thinking...'</span>        axios          <span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'https://yesno.wtf/api'</span><span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>answer <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>answer          <span class="token punctuation">}</span><span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>answer <span class="token operator">=</span> <span class="token string">'Error! Could not reach the API. '</span> <span class="token operator">+</span> error          <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#watch-example'</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/883ef6fe368f46f88d0b208d7c2453e8.png"><br>在这个示例中，使用 <code>watch</code> 选项允许我们执行异步操作 (访问一个 API)，限制我们执行该操作的频率，并在我们得到最终结果前，设置中间状态。这些都是计算属性无法做到的。</p><h5 id="计算属性-vs-侦听器"><a href="#计算属性-vs-侦听器" class="headerlink" title="计算属性 vs 侦听器"></a>计算属性 vs 侦听器</h5><p>Vue 提供了一种更通用的方式来观察和响应当前活动的实例上的数据变动：<strong>侦听属性</strong>。当你有一些数据需要随着其它数据变动而变动时，你很容易滥用 <code>watch</code>——特别是如果你之前使用过 AngularJS。然而，通常更好的做法是使用计算属性而不是命令式的 <code>watch</code> 回调。细想一下这个例子：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ fullName }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><pre class=" language-html"><code class="language-html">const vm = Vue.createApp({  data() {    return {      firstName: 'Foo',      lastName: 'Bar',      fullName: 'Foo Bar'    }  },  watch: {    firstName(val) {      this.fullName = val + ' ' + this.lastName    },    lastName(val) {      this.fullName = this.firstName + ' ' + val    }  }}).mount('#demo')</code></pre><p>上面代码是命令式且重复的。将它与计算属性的版本进行比较：</p><pre class=" language-html"><code class="language-html">const vm = Vue.createApp({  data() {    return {      firstName: 'Foo',      lastName: 'Bar'    }  },  computed: {    fullName() {      return this.firstName + ' ' + this.lastName    }  }}).mount('#demo')</code></pre><p>代码就简化很多；</p>]]></content>
      
      
      <categories>
          
          <category> 安装配置步骤 </category>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 搭建个人博客 基础配置及实操</title>
      <link href="/2021/07/20/hexo-blog-install/"/>
      <url>/2021/07/20/hexo-blog-install/</url>
      
        <content type="html"><![CDATA[<h2 id="初步搭建本地Hexo博客"><a href="#初步搭建本地Hexo博客" class="headerlink" title="初步搭建本地Hexo博客"></a>初步搭建本地Hexo博客</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><strong>安装前提</strong></p><p>搭建环境：Windows 10</p><ul><li>Node.js (Node.js 版本需不低于 8.10，建议使用 Node.js 10.0 及以上版本)</li><li>Git</li></ul><p>验证成功安装Node.js跟Git，通过查看版本号即可</p><pre class=" language-bash"><code class="language-bash">node -vnpm-v</code></pre><p><strong>安装 Hexo</strong></p><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><p>不过用 cnpm 更快一点不会有那么多报错，后面我就用 cnpm 了：</p><pre class=" language-bash"><code class="language-bash">cnpm <span class="token function">install</span> -g hexo-cli</code></pre><h3 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h3><h4 id="生成项目"><a href="#生成项目" class="headerlink" title="生成项目"></a>生成项目</h4><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><pre class=" language-bash"><code class="language-bash">hexo init <span class="token operator">&lt;</span>项目名称<span class="token operator">></span></code></pre><p>通过VScode软件打开初始化的博客</p><h4 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h4><p>运行服务：（hexo默认使用4000端口）</p><pre class=" language-bash"><code class="language-bash">hexo s</code></pre><p>通过 <a href="http://localhost:4000/">http://localhost:4000</a> 访问本地hexo服务<br><img src="https://img-blog.csdnimg.cn/20210720145742144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><h2 id="更换博客主题（hexo-theme-matery）"><a href="#更换博客主题（hexo-theme-matery）" class="headerlink" title="更换博客主题（hexo-theme-matery）"></a>更换博客主题（hexo-theme-matery）</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>在你的 themes 文件夹下使用 Git clone 命令来下载：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git</code></pre><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p>将博客文件夹下的配置文件_config.yml的主题theme改成：hexo-theme-matery<br><img src="https://img-blog.csdnimg.cn/20210720145925564.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>更换完成重新运行服务，主题已成功修改；</p><h2 id="更换中文"><a href="#更换中文" class="headerlink" title="更换中文"></a>更换中文</h2><p>将博客文件夹下的配置文件_config.yml的语言language改为zh-CN<br><img src="https://img-blog.csdnimg.cn/20210720150001170.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><h3 id="修改主题项中的配置"><a href="#修改主题项中的配置" class="headerlink" title="修改主题项中的配置"></a>修改主题项中的配置</h3><h4 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h4><p>categories 页是用来展示所有分类的页面，如果在你的博客 source 目录下还没有 categories/index.md 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span></code></pre><p>编辑你刚刚新建的页面文件 /source/categories/index.md，至少需要以下内容：</p><pre class=" language-bash"><code class="language-bash">---title: categoriesdate: 2018-09-30 17:25:30type: <span class="token string">"categories"</span>layout: <span class="token string">"categories"</span>---</code></pre><h4 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h4><p>tags 页是用来展示所有标签的页面，如果在你的博客 source 目录下还没有 tags/index.md 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span></code></pre><p>编辑你刚刚新建的页面文件 /source/tags/index.md，至少需要以下内容：</p><pre class=" language-bash"><code class="language-bash">---title: tagsdate: 2018-09-30 18:23:38type: <span class="token string">"tags"</span>layout: <span class="token string">"tags"</span>---</code></pre><h4 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h4><p>about 页是用来展示关于我和我的博客信息的页面，如果在你的博客 source 目录下还没有 about/index.md 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"about"</span></code></pre><p>编辑你刚刚新建的页面文件 /source/about/index.md，至少需要以下内容：</p><pre class=" language-bash"><code class="language-bash">---title: aboutdate: 2018-09-30 17:25:30type: <span class="token string">"about"</span>layout: <span class="token string">"about"</span>---</code></pre><h4 id="新建-404-页"><a href="#新建-404-页" class="headerlink" title="新建 404 页"></a>新建 404 页</h4><p>如果在你的博客 source 目录下还没有 404.md 文件，那么你就需要新建一个</p><p>编辑你刚刚新建的页面文件 /source/404.md，至少需要以下内容：</p><pre class=" language-bash"><code class="language-bash">---title: 404date: 2018-09-30 17:25:30type: <span class="token string">"404"</span>layout: <span class="token string">"404"</span>description: <span class="token string">"哦吼！完蛋！"</span>---</code></pre><h4 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h4><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 hexo-prism-plugin 的 Hexo 插件来做代码高亮，安装命令如下：</p><pre class=" language-bash"><code class="language-bash">cnpm i -S hexo-prism-plugin</code></pre><p>然后，修改 Hexo 根目录下 _config.yml 文件中 highlight.enable 的值为 false，并新增 prism 插件相关的配置，主要配置如下：</p><pre class=" language-bash"><code class="language-bash">highlight:  enable: <span class="token boolean">false</span>prism_plugin:  mode: <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  theme: <span class="token string">'tomorrow'</span>  line_number: <span class="token boolean">false</span>    <span class="token comment" spellcheck="true"># default false</span>  custom_css:</code></pre><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>本主题中还使用到了 hexo-generator-search 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class=" language-bash"><code class="language-bash">cnpm <span class="token function">install</span> hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><pre class=" language-bash"><code class="language-bash">search:  path: search.xml  field: post</code></pre><h4 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h4><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 SEO，且 gitment 评论对中文链接也不支持。我们可以用 hexo-permalink-pinyin Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class=" language-bash"><code class="language-bash">cnpm i hexo-permalink-pinyin --save</code></pre><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><pre class=" language-bash"><code class="language-bash">permalink_pinyin:  enable: <span class="token boolean">true</span>  separator: <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span></code></pre><blockquote><p>注：除了此插件外，hexo-abbrlink 插件也可以生成非中文的链接。</p></blockquote><h4 id="文章字数统计插件（建议安装）"><a href="#文章字数统计插件（建议安装）" class="headerlink" title="文章字数统计插件（建议安装）"></a>文章字数统计插件（建议安装）</h4><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 hexo-wordcount插件。</p><p>安装命令如下：</p><pre class=" language-bash"><code class="language-bash">cnpm i --save hexo-wordcount</code></pre><p>然后只需在本主题下的 _config.yml 文件中，将各个文章字数相关的配置激活即可：</p><pre class=" language-bash"><code class="language-bash">postInfo:  date: <span class="token boolean">true</span>  update: <span class="token boolean">false</span>  wordCount: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># 设置文章字数统计为 true.</span>  totalCount: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># 设置站点文章总字数统计为 true.</span>  min2read: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># 阅读时长.</span>  readCount: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># 阅读次数.</span></code></pre><h4 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h4><p>本主题新增了对emoji表情的支持，使用到了 hexo-filter-github-emojis 的 Hexo 插件来支持 emoji表情的生成，把对应的markdown emoji语法（::,例如：<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>）转变成会跳跃的emoji表情，安装命令如下：</p><pre class=" language-bash"><code class="language-bash">cnpm <span class="token function">install</span> hexo-filter-github-emojis --save</code></pre><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><pre class=" language-bash"><code class="language-bash">githubEmojis:  enable: <span class="token boolean">true</span>  className: github-emoji  inject: <span class="token boolean">true</span>  styles:  customEmojis:</code></pre><h2 id="Github上搭建博客"><a href="#Github上搭建博客" class="headerlink" title="Github上搭建博客"></a>Github上搭建博客</h2><h3 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h3><p><img src="https://img-blog.csdnimg.cn/20210720150551479.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><h3 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h3><ol><li>初始化本地仓库</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> init</code></pre><ol start="2"><li>添加一个远程git地址</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> remote add origin <span class="token operator">&lt;</span>远程仓库地址<span class="token operator">></span></code></pre><p><strong>安装hexo-depoyler-git依赖</strong></p><pre class=" language-bash"><code class="language-bash">yarn add hexo-deployer-git</code></pre><p><strong>修改部署相关的配置：</strong></p><p>修改 Hexo 根目录下 _config.yml 文件中deploy的相关属性：</p><pre class=" language-bash"><code class="language-bash">deploy:  type: <span class="token function">git</span>  repo: <span class="token operator">&lt;</span>仓库地址<span class="token operator">></span>  branch: master</code></pre><p><strong>部署代码</strong></p><pre class=" language-bash"><code class="language-bash">cnpm run deploy</code></pre><p>打开自己的站点看看是否已被部署成功：https://&lt;用户名&gt;.github.io/<br><img src="https://img-blog.csdnimg.cn/20210720151004110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><h2 id="实现Github自动化部署"><a href="#实现Github自动化部署" class="headerlink" title="实现Github自动化部署"></a>实现Github自动化部署</h2><p>由于上面操作中master分支已被占用，我们要把源代码提交到另外一个分支上</p><p><strong>首先 commit 本地代码</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> add <span class="token keyword">.</span><span class="token function">git</span> commit -m <span class="token string">'feat: blog init'</span></code></pre><p><strong>切换分支 myblog</strong><br><img src="https://img-blog.csdnimg.cn/20210720151105790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br><strong>将 myblog 分支 push 到 github 中</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> push origin master:myblog</code></pre><p><strong>配置 github actions</strong></p><p>在hexo根目录下创建文件deploy.yml，文件路径为：.github/workflows/deploy.yml</p><p>文件内容：</p><pre class=" language-bash"><code class="language-bash">name: Build and Deployon: <span class="token punctuation">[</span>push<span class="token punctuation">]</span>jobs:  build-and-deploy:    runs-on: ubuntu-latest    steps:      - name: Checkout 🛎️        uses: actions/checkout@v2 <span class="token comment" spellcheck="true"># If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.</span>        with:          persist-credentials: <span class="token boolean">false</span>      - name: Install and Build 🔧 <span class="token comment" spellcheck="true"># This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.</span>        run: <span class="token operator">|</span>          <span class="token function">npm</span> <span class="token function">install</span>          <span class="token function">npm</span> run build        env:          CI: <span class="token boolean">false</span>      - name: Deploy 🚀        uses: JamesIves/github-pages-deploy-action@releases/v3        with:          GITHUB_TOKEN: <span class="token variable">${{ secrets.GITHUB_TOKEN }</span><span class="token punctuation">}</span>          BRANCH: master <span class="token comment" spellcheck="true"># The branch the action should deploy to.</span>          FOLDER: pub</code></pre><p>可能出现下面的bug：</p><pre class=" language-bash"><code class="language-bash">Error: fatal: No url found <span class="token keyword">for</span> submodule path <span class="token string">'themes/hexo-theme-matery'</span> <span class="token keyword">in</span> .gitmodulesError: The process <span class="token string">'/usr/bin/git'</span> failed with <span class="token keyword">exit</span> code 128</code></pre><p>解决方案： </p><ol><li>从暂存区删除该文件夹<pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">rm</span> --cache themes/hexo-theme-matery</code></pre></li><li>把 themes/hexo-theme-matery/.git文件夹删掉；</li><li>查看当前状态，并按步骤提交即可：<pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> status<span class="token function">git</span> add <span class="token keyword">.</span><span class="token function">git</span> commit -m <span class="token string">"feat: add themes"</span><span class="token function">git</span> push</code></pre></li></ol><p>测试一下 github action 是否生效，修改一下文章内容并提交：<br><img src="https://img-blog.csdnimg.cn/2021072015141961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>点进去查看：<br><img src="https://img-blog.csdnimg.cn/20210720151435268.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>自此自动化部署已完成。</p><h2 id="主题的基本配置"><a href="#主题的基本配置" class="headerlink" title="主题的基本配置"></a>主题的基本配置</h2><h3 id="根目录下的-config-yml"><a href="#根目录下的-config-yml" class="headerlink" title="根目录下的 _config.yml"></a>根目录下的 _config.yml</h3><pre class=" language-bash"><code class="language-bash">title: Wyy<span class="token string">'s Blogsubtitle: '</span><span class="token string">'description: '</span><span class="token string">'keywords: author: Wyy   ##博客作者署名language: zh-CN      ##博客所使用语言，默认<span class="token variable"><span class="token variable">`</span>en<span class="token variable">`</span></span>timezone: '</span>Asia/Shanghai'   <span class="token comment" spellcheck="true">##时区设置</span></code></pre><blockquote><p>title 所对应的地方，补充：subtitle 所对应的就是博客正中间的subtitle，没有赋值时默认显示subtitle</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210720151807679.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><pre class=" language-bash"><code class="language-bash">theme: matery  <span class="token comment" spellcheck="true">##此处更改为主题的名字，要与themes文件夹下的主题名一致</span><span class="token comment" spellcheck="true"># Deployment</span><span class="token comment" spellcheck="true">## Docs: https://hexo.io/docs/one-command-deployment</span>deploy:  <span class="token comment" spellcheck="true">##和git仓库绑定有解释</span>  type: <span class="token function">git</span>  repo: git@github.com:<span class="token operator">&lt;</span>用户名<span class="token operator">></span>/<span class="token operator">&lt;</span>用户名<span class="token operator">></span>.github.io.git    branch: master</code></pre><h3 id="themes目录下的-config-yml"><a href="#themes目录下的-config-yml" class="headerlink" title="themes目录下的_config.yml"></a>themes目录下的_config.yml</h3><p><strong>menu，icon，二级菜单</strong></p><pre class=" language-bash"><code class="language-bash">menu:  Index:    url: /    icon: fas fa-home  Tags:    url: /tags    icon: fas fa-tags  Categories:    url: /categories    icon: fas fa-bookmark  Archives:    url: /archives    icon: fas fa-archive  About:    url: /about    icon: fas fa-user-circle  Contact:    url: /contact    icon: fas fa-comments  Friends:    url: /friends    icon: fas fa-address-book</code></pre><p><img src="https://img-blog.csdnimg.cn/20210720151941894.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><blockquote><p>初始效果如上图，当不需要导航栏有这么多标签时，可以选择注释掉不需要的部分。例如：</p></blockquote><pre class=" language-bash"><code class="language-bash">menu:  Index:    url: /    icon: fas fa-home  Tags:    url: /tags    icon: fas fa-tags  <span class="token comment" spellcheck="true"># Categories:</span>  <span class="token comment" spellcheck="true">#   url: /categories</span>  <span class="token comment" spellcheck="true">#   icon: fas fa-bookmark</span>  <span class="token comment" spellcheck="true"># Archives:</span>  <span class="token comment" spellcheck="true">#   url: /archives</span>  <span class="token comment" spellcheck="true">#   icon: fas fa-archive</span>  <span class="token comment" spellcheck="true"># About:</span>  <span class="token comment" spellcheck="true">#   url: /about</span>  <span class="token comment" spellcheck="true">#   icon: fas fa-user-circle</span>  <span class="token comment" spellcheck="true"># Contact:</span>  <span class="token comment" spellcheck="true">#   url: /contact</span>  <span class="token comment" spellcheck="true">#   icon: fas fa-comments</span>  <span class="token comment" spellcheck="true"># Friends:</span>  <span class="token comment" spellcheck="true">#   url: /friends</span>  <span class="token comment" spellcheck="true">#   icon: fas fa-address-book</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20210720152009639.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><blockquote><p>此时页面上方只显示剩下未被注释的部分</p></blockquote><p>关于每个标签前面的图标，通过icon来设置</p><pre class=" language-bash"><code class="language-bash">menu:  Index:    url: /    icon: fas fa-home</code></pre><p>修改 icon 的后半部分，例如，改为</p><pre class=" language-bash"><code class="language-bash">menu:  Index:    url: /    icon: fas fa-list-ul</code></pre><blockquote><p>效果如下，具体图标代码点击此处 <a href="http://www.fontawesome.com.cn/cheatsheet/">传送门</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210720152155308.png"><br>二级菜单写法如下：</p><pre class=" language-bash"><code class="language-bash">menu:  Index:    url: /    icon: fas fa-home    children:     - name: Musics       url: /musics       icon: fas fa-music     - name: Movies       url: /movies       icon: fas fa-film</code></pre><p><img src="https://img-blog.csdnimg.cn/20210720152230243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br><strong>dream【可选】</strong></p><pre class=" language-bash"><code class="language-bash">dream:  enable: <span class="token boolean">true</span>  showTitle: <span class="token boolean">true</span>  title: Dream  text: Calm down and be yourself</code></pre><p><img src="https://img-blog.csdnimg.cn/20210720152310783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br><strong>indexbtn</strong></p><pre class=" language-bash"><code class="language-bash">indexbtn:  enable: <span class="token boolean">true</span>  name: CSDN  icon: fas fa-copyright  url: https://blog.csdn.net/qq_41376237</code></pre><p><img src="https://img-blog.csdnimg.cn/20210720152339474.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br><strong>sociallink</strong></p><pre class=" language-bash"><code class="language-bash">socialLink:  github:  https://github.com/319226862/wyy  email: 319226862@qq.com  facebook: <span class="token comment" spellcheck="true"># https://www.facebook.com/xxx</span>  twitter: <span class="token comment" spellcheck="true"># https://twitter.com/xxx</span>  qq: 319226862  weibo: <span class="token comment" spellcheck="true"># https://weibo.com/xxx</span>  zhihu: <span class="token comment" spellcheck="true"># https://www.zhihu.com/xxx</span>  rss:  <span class="token comment" spellcheck="true"># true、false</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20210720152405492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><blockquote><p>作用如图，其中，不写代表不启用，想添加csdn等其他账号同理</p></blockquote><p><strong>打赏功能</strong></p><pre class=" language-bash"><code class="language-bash">reward:  enable: <span class="token boolean">true</span>  title: 你的赏识是我前进的动力  wechat: /medias/reward/wechat.png  alipay: /medias/reward/alipay.jpg</code></pre><blockquote><p>开通功能后，在每篇文章末尾可以通过支付宝或者微信打赏，其中图片保存在/Users/apple/Documents/blog/themes/matery/source/medias/reward 目录下，或者自己选择其他目录保存</p></blockquote><p><strong>字数统计等</strong></p><pre class=" language-bash"><code class="language-bash">postInfo:  date: <span class="token boolean">true</span> <span class="token comment" spellcheck="true"># 发布日期</span>  update: <span class="token boolean">true</span> <span class="token comment" spellcheck="true"># 更新日期</span>  wordCount: <span class="token boolean">true</span> <span class="token comment" spellcheck="true"># 文章字数统计</span>  totalCount: <span class="token boolean">true</span> <span class="token comment" spellcheck="true"># 站点总文章字数</span>  min2read: <span class="token boolean">true</span> <span class="token comment" spellcheck="true"># 文章阅读时长</span>  readCount: <span class="token boolean">true</span> <span class="token comment" spellcheck="true"># 文章阅读次数</span></code></pre><blockquote><p>若要开启文章字数统计，需要安装 hexo-wordcount 插件，安装命令:<br>npm i –save hexo-wordcount<br>如果使用npm命令不加载或者加载慢，可以使用<br>cnpm i –save hexo-wordcount</p></blockquote><p>开启后效果：<br><img src="https://img-blog.csdnimg.cn/20210720152546198.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><p><strong>featureimages</strong></p><pre class=" language-bash"><code class="language-bash">featureImages:- /medias/featureimages/1.jpg- /medias/featureimages/2.jpg- /medias/featureimages/3.jpg- /medias/featureimages/4.jpg- /medias/featureimages/5.jpg- /medias/featureimages/6.jpg- /medias/featureimages/7.jpg- /medias/featureimages/8.jpg- /medias/featureimages/9.jpg- /medias/featureimages/10.jpg</code></pre><p><img src="https://img-blog.csdnimg.cn/20210720152604311.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><blockquote><p>featureImages 设置的是无文章特色图片时需要显示的文章特色图片，即，发博客是不特定设置博客图片，则从中随机选取一张作为封面</p></blockquote><p><strong>几何线条背景canvas_nest</strong></p><pre class=" language-bash"><code class="language-bash">canvas_nest:  enable: <span class="token boolean">true</span>  color: 0,0,255 <span class="token comment" spellcheck="true"># 线条颜色, 默认: '0,0,0' ；三个数字分别为(R,G,B)，注意用,分割</span>  pointColor: 0,0,255 <span class="token comment" spellcheck="true"># 交点颜色, 默认: '0,0,0' ；三个数字分别为(R,G,B)，注意用,分割</span>  opacity: 0.7 <span class="token comment" spellcheck="true"># 线条透明度（0~1）, 默认: 0.5</span>  zIndex: -1 <span class="token comment" spellcheck="true"># 背景的 z-index 属性，css 属性用于控制所在层的位置, 默认: -1.</span>  count: 99 <span class="token comment" spellcheck="true"># 线条的总数量, 默认: 99</span></code></pre><p><img src="https://img-blog.csdnimg.cn/2021072015263564.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><blockquote><p>很多博客都有的几何线条背景<br>color： 线条颜色<br>pointColor： 交点颜色<br>opacity： 线条透明度（0~1）<br>zIndex： css 属性用于控制所在层的位置,<br>count： 线条的总数量</p></blockquote><p><strong>分享链接share</strong></p><pre class=" language-bash"><code class="language-bash">sharejs:  enable: <span class="token boolean">true</span>  sites: twitter,facebook,google,qq,qzone,wechat,weibo,douban,linkedin</code></pre><p><img src="https://img-blog.csdnimg.cn/20210720152707876.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><blockquote><p>调整 sites 的顺序即可调整页面的分享图标顺序</p></blockquote><p><strong>副标题subtitle</strong></p><pre class=" language-bash"><code class="language-bash">subtitle:  enable: <span class="token boolean">true</span>  loop: <span class="token boolean">true</span> <span class="token comment" spellcheck="true"># 是否循环</span>  showCursor: <span class="token boolean">true</span> <span class="token comment" spellcheck="true"># 是否显示光标</span>  startDelay: 300 <span class="token comment" spellcheck="true"># 开始延迟</span>  typeSpeed: 100 <span class="token comment" spellcheck="true"># 打字速度</span>  backSpeed: 50 <span class="token comment" spellcheck="true"># 删除速度</span>  sub:    - Calm down and be yourself    - Just Do <span class="token string">'IT'</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20210720152736190.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><h3 id="修改导航栏颜色"><a href="#修改导航栏颜色" class="headerlink" title="修改导航栏颜色"></a>修改导航栏颜色</h3><p>打开 themes/matery/source/css/matery.css 文件，找到bg-color这个属性，即为导航栏和底部的颜色</p><pre class=" language-bash"><code class="language-bash">.bg-color <span class="token punctuation">{</span>    background-image: linear-gradient<span class="token punctuation">(</span>to right, <span class="token comment" spellcheck="true">#8cbfb8 0%, #128c6f 100%);</span><span class="token punctuation">}</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20210720152810759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><blockquote><p>如上所示，使用的是渐变色，如果不知道要换什么颜色，嫌每次都需要修改再部署比较麻烦，建议在需要换颜色的地方右键-&gt;检查，查看这个属性，在控制台对颜色做出相应的更改，满意后再去代码中修改保存。<br>同理，如果还有其他要修改的位置，相应方法找到元素名称，去css文件中找到并修改</p></blockquote><h3 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h3><pre class=" language-bash"><code class="language-bash">profile:  avatar: /medias/fatcat.jpg  career: 搬砖人  introduction: 赚钱养猫养狗<span class="token operator">!</span></code></pre><blockquote><p>avatar： 头像设置<br>career： 职业<br>introduction： 个人介绍</p></blockquote><p>对应效果图如下：<br><img src="https://img-blog.csdnimg.cn/20210720152912767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><h3 id="配置”我的项目”信息"><a href="#配置”我的项目”信息" class="headerlink" title="配置”我的项目”信息"></a>配置”我的项目”信息</h3><pre class=" language-bash"><code class="language-bash">myProjects:  enable: <span class="token boolean">true</span>  data:    hexo-theme-matery:      icon: fas fa-file-alt      iconBackground: <span class="token string">'linear-gradient(to bottom right, #66BB6A 0%, #81C784 100%)'</span>      url: http://github.com/blinkfox/hexo-theme-matery      desc: This is a Hexo blog theme with <span class="token string">'Material Design'</span> and responsive design.    Fenix:        icon: fas fa-database        iconBackground: <span class="token string">'linear-gradient(to bottom right, #F06292 0%, #EF5350 100%)'</span>        url: https://github.com/blinkfox/fenix        desc: 这是 Spring Data JPA 复杂或动态 SQL 查询的扩展库。    typora-vue-theme:        icon: fas fa-file-alt        iconBackground: <span class="token string">'linear-gradient(to bottom right, #29B6F6 0%, #1E88E5 100%)'</span>        url: https://github.com/blinkfox/typora-vue-theme        desc: This is a typora theme inspired by Vue document style.</code></pre><p><img src="https://img-blog.csdnimg.cn/20210720152934939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><pre class=" language-bash"><code class="language-bash">具体自己修改，不想显示，设置enable值为false</code></pre><h3 id="配置”我的技能”信息"><a href="#配置”我的技能”信息" class="headerlink" title="配置”我的技能”信息"></a>配置”我的技能”信息</h3><pre class=" language-bash"><code class="language-bash">mySkills:  enable: <span class="token boolean">true</span>  data:    html:      background: <span class="token string">'linear-gradient(to right, #FF0066 0%, #FF00CC 100%)'</span>      percent: 90%    css:      background: <span class="token string">'linear-gradient(to right, #9900FF 0%, #CC66FF 100%)'</span>      percent: 80%    javascript:      background: <span class="token string">'linear-gradient(to right, #2196F3 0%, #42A5F5 100%)'</span>      percent: 50%    c/java:      background: <span class="token string">'linear-gradient(to right, #00BCD4 0%, #80DEEA 100%)'</span>      percent: 50%    echart/ps:      background: <span class="token string">'linear-gradient(to right, #4CAF50 0%, #81C784 100%)'</span>      percent: 60%    vue:      background: <span class="token string">'linear-gradient(to right, #FFEB3B 0%, #FFF176 100%)'</span>      percent: 30%</code></pre><p><img src="https://img-blog.csdnimg.cn/20210720153013197.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><h2 id="Hexo博客发表文章、草稿、添加分类和标签"><a href="#Hexo博客发表文章、草稿、添加分类和标签" class="headerlink" title="Hexo博客发表文章、草稿、添加分类和标签"></a>Hexo博客发表文章、草稿、添加分类和标签</h2><blockquote><p>在_post 文件夹下，新建&amp;&amp;.md 文件<br>基本配置如下：<br>title： 文章标题<br>top： 是否把文章置顶<br>img： 是否给文章定义特色图片，如果不设置，默认从featureimages里面抽取<br>summary： 是否给文章加上摘要，不设置，默认截取文章开头一部分<br>categories： 给文章分类<br>tags： 给文章加标签，可加多个<br>剩下博客书写同csdn一样，可以直接复制过去</p></blockquote><pre class=" language-bash"><code class="language-bash">---title: hexo的个性化配置date: 2020-08-31 14:01:19author: wyyimg: top: <span class="token boolean">true</span>cover: <span class="token boolean">true</span>coverImg: password: toc: <span class="token boolean">false</span>mathjax: <span class="token boolean">false</span>summary: hexo的matery主题的个性化配置categories: - hexotags:- hexo---</code></pre><h2 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h2><p>有时候 push 的时候 git 会突然抽风，报错：</p><pre class=" language-bash"><code class="language-bash">关于错误:ssh: Could not resolve <span class="token function">hostname</span> github.com: Name or <span class="token function">service</span> not known.fatal: Could not <span class="token function">read</span> from remote repository.</code></pre><p>我是在终端中输入 <code>ssh -T git@github.com</code> 或 <code>ping github.com</code> 后再 <code>push</code> 就好了。</p><h2 id="双线部署到-Coding-和-GitHub-并实现全站-HTTPS"><a href="#双线部署到-Coding-和-GitHub-并实现全站-HTTPS" class="headerlink" title="双线部署到 Coding 和 GitHub 并实现全站 HTTPS"></a>双线部署到 Coding 和 GitHub 并实现全站 HTTPS</h2><h3 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h3><p>进入 Coding.net 官网，点击个人版登陆，没有账号就注册一个并登录，有团队的就建立一个自己的团队再从里面新建项目，并给其项目新建代码仓库，远程关联 GitHub 上个人博客仓库：<br><img src="https://img-blog.csdnimg.cn/img_convert/5a24686df6e4dc37837992f859082dfd.png"><br><img src="https://img-blog.csdnimg.cn/img_convert/a3bac0da6a1dbb461ba7caeeefacdd9f.png"></p><h3 id="配置公钥"><a href="#配置公钥" class="headerlink" title="配置公钥"></a>配置公钥</h3><p>配置 SSH 公钥方法与 GitHub Pages 的方式差不多，点击你的头像，依次选择【个人账户设置】-【SSH公钥】-【新增公钥】<br><img src="https://img-blog.csdnimg.cn/img_convert/1f2142275fa9d1db6fc6fcf1d0d86027.png"><br>前面部署到 GitHub Pages 的时候就已经有了一对公钥，我们直接将该公钥粘贴进去就行，公钥名称可以随便写，选中永久有效选项</p><blockquote><p>公钥储存位置一般在 C:\Users\用户名.ssh 目录下的 id_rsa.pub 文件里，用记事本打开复制其内容即可</p></blockquote><p>添加公钥后，我们可以在终端输入以下命令来检查是否配置成功：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> -T git@git.coding.net</code></pre><h3 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置 _config.yml"></a>配置 _config.yml</h3><p>进入你的项目，在右下角有选择连接方式，选择 SSH 方式（HTTPS 方式也可以，但是这种方式有时候可能连接不上，SSH 连接不容易出问题），一键复制，然后打开你本地博客根目录的 _config.yml 文件，找到 deploy 关键字，添加 coding 地址，也就是刚刚复制的 SSH 地址：<br><img src="https://img-blog.csdnimg.cn/img_convert/bde6094d891251bef98826d5bbf5c64d.png"><br><img src="https://img-blog.csdnimg.cn/img_convert/f533d0e28f0a8acc757ead1b74b75de0.png"><br>添加完成后先执行命令 <code>hexo clean</code> 清理一下缓存，然后执行命令 <code>hexo g -d</code> 将博客双线部署到 Coding Pages 和 GitHub Pages；</p><h3 id="网站托管"><a href="#网站托管" class="headerlink" title="网站托管"></a>网站托管</h3><p>在项目目录下点击【持续部署】-&gt;【网站托管】，按照步骤注册登录腾讯云：<br><img src="https://img-blog.csdnimg.cn/img_convert/f6da7639f8027ccc362e008fd8cdf9d8.png"><br>最后新建部署网站，仓库地址填 GitHub 上的仓库地址：<br><img src="https://img-blog.csdnimg.cn/img_convert/ae81218c769114a9b43b66823bfb0775.png"><br>这样就部署成果啦：<br><img src="https://img-blog.csdnimg.cn/img_convert/43f2d5b42a5cdacf5622a380333f3688.png"><br>点击【访问】即可！</p><h2 id="将个人博客部署到自己的域名"><a href="#将个人博客部署到自己的域名" class="headerlink" title="将个人博客部署到自己的域名"></a>将个人博客部署到自己的域名</h2><h3 id="申请域名"><a href="#申请域名" class="headerlink" title="申请域名"></a>申请域名</h3><p>我是买了腾讯云个人的域名1年只要1块钱，买完记得实名认证；</p><h3 id="在仓库里添加CNAME文件并在文件中填写绑定的域名"><a href="#在仓库里添加CNAME文件并在文件中填写绑定的域名" class="headerlink" title="在仓库里添加CNAME文件并在文件中填写绑定的域名"></a>在仓库里添加CNAME文件并在文件中填写绑定的域名</h3><p><img src="https://img-blog.csdnimg.cn/img_convert/76c09e6b98572421528bfb0a68cfd706.png"><br>文件里填写的内容：要绑定的域名（不要包含Http://和www）</p><p><img src="https://img-blog.csdnimg.cn/img_convert/7ee980c63d49b196b0432d187a6ffe3d.png"></p><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><p>添加CNAME文件并在文件中填写绑定的域名后应该会自动保存，看看有没有自动保存：<br><img src="https://img-blog.csdnimg.cn/img_convert/68530767be019dec09444475291617a9.png"></p><h3 id="添加域名解析"><a href="#添加域名解析" class="headerlink" title="添加域名解析"></a>添加域名解析</h3><p>ping 你的<a href="http://github.io域名，得到一个IP：">http://github.io域名，得到一个IP：</a><br><img src="https://img-blog.csdnimg.cn/img_convert/fdab653e1fc7bcfa6a93e95761a4ba1b.png"><br>修改你的域名解析记录：<br><img src="https://img-blog.csdnimg.cn/img_convert/f5498b31060943256e1e16bf76efd5e9.png"><br>添加两个记录，用得到的IP，一个主机记录为：“www”，一个为“@”，<br><img src="https://img-blog.csdnimg.cn/img_convert/016b9e67e91b05b7a7d9a3fd6a78d8ab.png"><br>这样通过 <a href="http://jessieeeeee.xyz/">http://jessieeeeee.xyz/</a> 就能访问到你的博客了:<img src="https://img-blog.csdnimg.cn/img_convert/0dae211db5a3012af1b84a0bfa21bde8.png"></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>虽然好像是这三种方式都能打开，Github 和我自己域名上是同步更新的，但是 coding 没有，仓库那里的自动更新是每天一次的，不然就得手动更新：<br><img src="https://img-blog.csdnimg.cn/img_convert/978ea3d22a03d70ccfda774258a4758b.png"><br>好了，时隔两三天终于挣扎完了，去做我的宫保鸡丁了…</p>]]></content>
      
      
      <categories>
          
          <category> 安装配置步骤 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
            <tag> Git </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为云服务器 登录与配置 Mysql</title>
      <link href="/2021/01/09/huawei-cloud/"/>
      <url>/2021/01/09/huawei-cloud/</url>
      
        <content type="html"><![CDATA[<p>具体步骤见以下网址：</p><ul><li><a href="https://support.huaweicloud.com/ugs-saphana/zh-cn_topic_0261394124.html">获取弹性云服务器的密钥文件</a></li><li><a href="https://support.huaweicloud.com/usermanual-ecs/zh-cn_topic_0017955380.html">SSH密钥方式登录</a></li><li><a href="https://yq.aliyun.com/articles/758177">如何在 Ubuntu 20.04 上安装 MySQL</a></li><li><a href="https://www.wbolt.com/how-to-fix-ssh-connection-refused.html">如何解决SSH连接 “Connection Refused”报错</a></li><li><a href="https://zhuanlan.zhihu.com/p/110353846?utm_source=wechat_session&amp;utm_medium=social&amp;utm_oi=1136270670114693120&amp;utm_campaign=shareopn">Ubuntu 配置 MySql</a></li></ul><p>后面发现….</p><p>直接在云服务器控制台远程登录就行了：<br><img src="https://img-blog.csdnimg.cn/20210109145443719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/202101091455537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>好家伙，我直接好家伙，搞了半天…</p>]]></content>
      
      
      <categories>
          
          <category> 安装配置步骤 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 华为云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flutter 安卓打包步骤</title>
      <link href="/2021/01/08/flutter-android-pack/"/>
      <url>/2021/01/08/flutter-android-pack/</url>
      
        <content type="html"><![CDATA[<h2 id="更改-App-图标"><a href="#更改-App-图标" class="headerlink" title="更改 App 图标"></a>更改 App 图标</h2><p>首先，就是 App 的图标问题，在以下这几个部分把图标改完即可（文件命名要一样）：<br><img src="/api/project/9123846/files/24428316/imagePreview"><br>别忘了改图标的引用设置：<br><img src="/api/project/9123846/files/24428319/imagePreview"></p><h2 id="更改-App-名称"><a href="#更改-App-名称" class="headerlink" title="更改 App 名称"></a>更改 App 名称</h2><p>然后就是 App 的名字：<br><img src="/api/project/9123846/files/24428336/imagePreview"></p><h2 id="生成-keystore"><a href="#生成-keystore" class="headerlink" title="生成 keystore"></a>生成 keystore</h2><p>下一步就是生成 keystore，这里的坑挺多的，官方写的非常简单，只要在终端运行如下代码就可以成功,但事实是报错：</p><pre><code>keytool -genkey -v -keystore ~/key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key</code></pre><p>根本找不到这个目录，真的很坑，其实我们只是没有配置环境变量。但是为了一个包配置环境变量是不值得的；【但我配置了哈哈哈】</p><p>这时候可以用下面的命令找到 keytool.exe 的位置：</p><pre><code>flutter doctor -v</code></pre><p>这里我们要找的其实就是这个 java 地址：<br><img src="/api/project/9123846/files/24428365/imagePreview"><br>这时候你直接拷贝命令并进行输入，但这里也有个坑，就是如果文件夹中间带有空空，你需要用带引号扩上，例如：</p><pre><code>D:\Program\Android\'Android Studio'\jre\bin\keytool -genkey -v -keystore ~/key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key</code></pre><p>但是我没有，我应该是这样：</p><pre><code>C:\Users\86135\Downloads1\jre\bin\keytool -genkey -v -keystore ~/key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key</code></pre><p>但是我因为配置了环境，所以我是这样：</p><pre><code>keytool -genkey -v -keystore ~/key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key</code></pre><p>这就可以了吗？那你就太天真了，还是会报错：<br><img src="/api/project/9123846/files/24428381/imagePreview"><br>这个错误的主要问题是目录不存在和没有写权限，所以我们要更换一个有写权限的目录。我们把命令改成了下面的形式：</p><pre><code>C:\Users\86135\Downloads1\jre\bin\keytool -genkey -v -keystore D:/key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key</code></pre><p>配置了环境的直接：</p><pre><code>keytool -genkey -v -keystore D:/key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key</code></pre><p>这时候就可以创建成功了。你的D盘下面就会有一个Jks的文件，记住这个文件不能共享给任何人。<br><img src="/api/project/9123846/files/24428386/imagePreview"><br>有了这个 key.jks 文件后，可以到项目目录下的 android 文件夹下，创建一个名为 key.properties 的文件，并打开粘贴下面的代码：</p><pre><code>storePassword=&lt;password from previous step&gt;    //输入上一步创建KEY时输入的 密钥库 密码keyPassword=&lt;password from previous step&gt;    //输入上一步创建KEY时输入的 密钥 密码keyAlias=keystoreFile=&lt;E:/key.jks&gt;    //key.jks的存放路径</code></pre><p>我的文件最后是这样的：</p><pre><code>storePassword=123123keyPassword=123123keyAlias=keystoreFile=D:/key.jks</code></pre><p>这个工作中也不要分享出去哦，这个Key就算生成成功了。</p><h2 id="配置-key-注册"><a href="#配置-key-注册" class="headerlink" title="配置 key 注册"></a>配置 key 注册</h2><p>key生成好后，需要在build.gradle文件中进行配置。这个过程其实很简单，就是粘贴复制一些东西，你是不需要知道这些文件的具体用处的。</p><p>第一项：</p><p>进入项目目录的 /android/app/build.gradle 文件，在 android{ 这一行前面,加入如下代码：</p><pre><code>def keystorePropertiesFile = rootProject.file("key.properties")def keystoreProperties = new Properties()keystoreProperties.load(new FileInputStream(keystorePropertiesFile))</code></pre><p><img src="/api/project/9123846/files/24428405/imagePreview"><br>把如下代码进行替换：<br><img src="/api/project/9123846/files/24428408/imagePreview"><br>替换成的代码：</p><pre><code>signingConfigs {    release {        keyAlias keystoreProperties['keyAlias']        keyPassword keystoreProperties['keyPassword']        storeFile file(keystoreProperties['storeFile'])        storePassword keystoreProperties['storePassword']    }}buildTypes {    release {        signingConfig signingConfigs.release    }}</code></pre><h2 id="生成-apk"><a href="#生成-apk" class="headerlink" title="生成 apk"></a>生成 apk</h2><p>直接在终端中输入 flutter build apk 就打包成功了，我们可以直接在终端输入 flutter install 让 apk 安装在虚拟机上；<br><img src="/api/project/9123846/files/24428423/imagePreview"><br>这样则是成功：<br><img src="/api/project/9123846/files/24428425/imagePreview"><br>生成成功后即可在 build -&gt; app -&gt; outputs -&gt; apk 文件夹中获取最终打包出来的 apk 文件安装试用：<br><img src="/api/project/9123846/files/24428428/imagePreview"></p>]]></content>
      
      
      <categories>
          
          <category> 安装配置步骤 </category>
          
          <category> flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flutter </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js 的安装及环境配置</title>
      <link href="/2021/01/04/nodejs-install/"/>
      <url>/2021/01/04/nodejs-install/</url>
      
        <content type="html"><![CDATA[<h2 id="安装-Node-js-步骤"><a href="#安装-Node-js-步骤" class="headerlink" title="安装 Node.js 步骤"></a>安装 Node.js 步骤</h2><ol><li>下载对应你系统的 Node.js 版本：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></li><li>选安装目录进行安装</li><li>环境配置</li><li>测试</li></ol><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><ol><li><p>Node.js 简介<br>简单的说 Node.js 就是运行在服务端的 JavaScript。Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全球最大的开源库生态系统。</p></li><li><p>下载 Node.js<br>打开官网下载链接：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a> ：<br><img src="https://img-blog.csdnimg.cn/20210104105419256.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p></li></ol><h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><ol><li>下载完成后，双击开始安装 Node.js：<br><img src="https://img-blog.csdnimg.cn/20210104105505625.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>然后就一直点 Next 就可以啦；</li><li>在键盘按下【win+R】键，输入 cmd，然后回车，打开 cmd 窗口：<br><img src="https://img-blog.csdnimg.cn/20210104105755741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></li></ol><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>说明：这里的环境配置主要配置的是npm安装的全局模块所在的路径，以及缓存cache的路径，之所以要配置，是因为以后在执行类似：npm install express [-g] （后面的可选参数-g，g代表global全局安装的意思）的安装语句时，会将安装的模块安装到【C:\Users\用户名\AppData\Roaming\npm】路径中，占C盘空间。</p><ol><li>在 nodejs 安装路径下新建如下两个文件夹：<br>① node_global：用来存放全局模块<br>② node_cache：用来存放下载包的缓存。<br><img src="https://img-blog.csdnimg.cn/20210104110404710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></li><li>打开终端输入如下两条命令，运行：<pre class=" language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true">## 设置全局模块存放路径</span>npm config <span class="token function">set</span> prefix <span class="token string">"C:\Program Files\nodejs\node_global"</span> <span class="token comment" spellcheck="true">## 设置缓存文件夹</span>npm config <span class="token function">set</span> cache <span class="token string">"C:\Program Files\nodejs\node_cache"</span> </code></pre><img src="https://img-blog.csdnimg.cn/20210104110824434.png"></li></ol><blockquote><p>说明：新建以上两个文件夹，可以避免日后项目中使用<br>npm下载全局模块的时候，安装在C:\Users\username\AppData\下的Roaming\npm下，太占空间！<br>3. 配置环境变量：<br>在环境变量 -&gt; 系统变量中新建一个变量名为 “NODE_PATH”， 值为“C:\Program Files\nodejs\node_modules”，如下图：<br><img src="https://img-blog.csdnimg.cn/20210104111930863.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>4. 最后编辑用户变量里的Path，将相应npm的路径改为：D:\Program Files\nodejs\node_global，如下：<br>更改前：<br><img src="https://img-blog.csdnimg.cn/20210104112111290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>更改后：<br><img src="https://img-blog.csdnimg.cn/20210104112201505.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>配置完成。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 安装配置步骤 </category>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 的安装与使用</title>
      <link href="/2020/08/31/git-install/"/>
      <url>/2020/08/31/git-install/</url>
      
        <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>通过 git 管理 github 托管项目代码；</p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><ol><li>官网下载：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><br><img src="https://img-blog.csdnimg.cn/20200809124239472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></li><li>双击安装<br><img src="https://img-blog.csdnimg.cn/20200809125338428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></li><li>选择安装的工作目录<br><img src="https://img-blog.csdnimg.cn/20200809125507588.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></li><li>选择组件<br><img src="https://img-blog.csdnimg.cn/20200809125718139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></li><li>开始菜单目录名设置<br><img src="https://img-blog.csdnimg.cn/20200809125801689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></li><li><img src="https://img-blog.csdnimg.cn/20200809125841852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></li><li>选择使用命令行环境<br><img src="https://img-blog.csdnimg.cn/2020080913003894.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></li><li>我放弃了，我全选 next 了；</li><li>检验是否安装成功：桌面鼠标右键，如有出现两个 git 单词的选项则成功；<br><img src="https://img-blog.csdnimg.cn/2020080913052232.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><h2 id="配置-Git"><a href="#配置-Git" class="headerlink" title="配置 Git"></a>配置 Git</h2><h3 id="设置全局变量"><a href="#设置全局变量" class="headerlink" title="设置全局变量"></a>设置全局变量</h3>在桌面鼠标右键打开 git bush here：<br><img src="https://img-blog.csdnimg.cn/20200831134900155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70#pic_center"><br>输入：<pre class=" language-powershell"><code class="language-powershell">$ git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>name <span class="token string">"your name"</span> $ git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>email <span class="token string">"your@email.com"</span></code></pre><h3 id="登陆-GitHub，创建-SSHkey"><a href="#登陆-GitHub，创建-SSHkey" class="headerlink" title="登陆 GitHub，创建 SSHkey"></a>登陆 GitHub，创建 SSHkey</h3>然后输入这个，创建 SSHkey：</li></ol><pre class=" language-powershell"><code class="language-powershell">$ ssh<span class="token operator">-</span>keygen <span class="token operator">-</span>t rsa <span class="token operator">-</span>C <span class="token string">"your@email.com"</span></code></pre><p>然后连续点击三次回车键；<br><img src="https://img-blog.csdnimg.cn/20200831135016735.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70#pic_center"><br>会在本地用户文件夹下生成 .ssh 的文件夹，里面包含 id_rsa 和 id_rsa.pub 两个文件：<br><img src="https://img-blog.csdnimg.cn/20200831135036126.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70#pic_center"><br>然后打开文件夹：<br><img src="https://img-blog.csdnimg.cn/20200831135047998.png#pic_center"><br>然后用记事本打开id_rsa.pub，全选,复制：<br><img src="https://img-blog.csdnimg.cn/20200831135102411.png#pic_center"><br>然后我们回到刚刚注册的 GitHub 账号里去，点击设置：<br><img src="https://img-blog.csdnimg.cn/20200831135115308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70#pic_center"><br>然后点击 SSH：<br><img src="https://img-blog.csdnimg.cn/20200831135130934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70#pic_center"><br>然后点击 NEW SSHkey：<br><img src="https://img-blog.csdnimg.cn/20200831135141520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70#pic_center"><br>然后把上一步复制的key粘贴进去，添加到GitHub账号设置中：<br><img src="https://img-blog.csdnimg.cn/20200831135152919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70#pic_center"><br>然后回到 git，输入：</p><pre class=" language-powershell"><code class="language-powershell">$ ssh <span class="token operator">-</span>T git@github<span class="token punctuation">.</span>com</code></pre><p>最后，输入 <code>yes</code>：<br><img src="https://img-blog.csdnimg.cn/20200831135234352.png#pic_center"><br>好了，这就完成了本地和 GitHub 的通信配置。</p><h2 id="Git-基本工作流程"><a href="#Git-基本工作流程" class="headerlink" title="Git 基本工作流程"></a>Git 基本工作流程</h2><p> <strong>Git 工作区域</strong><br><img src="https://img-blog.csdnimg.cn/20200809131144379.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br><strong>向仓库中添加文件流程</strong><br><img src="https://img-blog.csdnimg.cn/20200809131255372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><h2 id="Git-初始化及仓库创建和操作"><a href="#Git-初始化及仓库创建和操作" class="headerlink" title="Git 初始化及仓库创建和操作"></a>Git 初始化及仓库创建和操作</h2><p><strong>基本信息设置</strong></p><pre class=" language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true"># 1.设置用户名</span>$ git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>name <span class="token string">'用户名'</span><span class="token comment" spellcheck="true"># 2. 设置用户名邮箱</span>$ git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>email <span class="token string">'邮箱'</span></code></pre><p>该设置在 github 仓库主页显示谁提交了该文件；</p><p><strong>初始化一个新的 Git 仓库</strong></p><p>在项目目录内初始化 git（创建 git 仓库）；</p><pre class=" language-powershell"><code class="language-powershell">$ cd &lt;项目文件夹>$ git init </code></pre><p>(如果看不见 .git 则设置电脑显示隐藏文件)</p><h2 id="Git-管理远程仓库"><a href="#Git-管理远程仓库" class="headerlink" title="Git 管理远程仓库"></a>Git 管理远程仓库</h2><h3 id="使用远程仓库"><a href="#使用远程仓库" class="headerlink" title="使用远程仓库"></a>使用远程仓库</h3><p>作用：备份，实现代码共享集中化管理；</p><pre class=" language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true"># 在项目目录内初始化 git</span>$ git init <span class="token comment" spellcheck="true"># 将远程仓库（github对应的项目）复制到本地</span>$ git clone &lt;远程仓库地址><span class="token comment" spellcheck="true"># 对项目进行修改后</span>$ <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment" spellcheck="true"># 关联远程仓库</span>$ git remote add origin &lt;远程仓库地址><span class="token comment" spellcheck="true"># 关联完可以查看一下关联的远程分支</span>$ git remote <span class="token operator">-</span>v<span class="token comment" spellcheck="true"># 从已有的分支创建新的分支(如从master分支),创建一个dev分支</span>$ git checkout <span class="token operator">-</span>b dev<span class="token comment" spellcheck="true"># 创建完可以查看一下,分支已经切换到dev</span>$ git branch<span class="token comment" spellcheck="true"># 添加到暂存区</span>$ git add <span class="token punctuation">.</span>$ git status<span class="token comment" spellcheck="true"># 将文件从暂存区提交到本地仓库</span>$ git commit <span class="token operator">-</span>m <span class="token string">'feat: 增加了xx功能'</span>$ git status<span class="token comment" spellcheck="true"># 获取远程于本地内容同步</span>$ git pull<span class="token comment" spellcheck="true"># 将本地仓库提交到远程仓库</span>$ git push <span class="token operator">-</span>u origin dev    <span class="token comment" spellcheck="true"># 将本地的dev分支推送到origin主机，同时指定origin为默认主机，后面就可以不加任何参数使用git push了</span>$ git push <span class="token operator">-</span>u origin master <span class="token comment" spellcheck="true"># 将本地的master分支推送到origin主机，同时指定origin为默认主机，后面就可以不加任何参数使用git push了</span>$ git push</code></pre><h3 id="Git-克隆操作"><a href="#Git-克隆操作" class="headerlink" title="Git 克隆操作"></a>Git 克隆操作</h3><ul><li><strong>目的</strong>：将远程仓库（github对应的项目）复制到本地；</li><li><strong>代码</strong>：<pre class=" language-powershell"><code class="language-powershell">$ git clone 仓库地址</code></pre></li></ul><p> 仓库地址由来：<br><img src="https://img-blog.csdnimg.cn/2020081012392137.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><h3 id="将本地仓库同步到-git-远程仓库中"><a href="#将本地仓库同步到-git-远程仓库中" class="headerlink" title="将本地仓库同步到 git 远程仓库中"></a>将本地仓库同步到 git 远程仓库中</h3><pre class=" language-powershell"><code class="language-powershell">$ git push</code></pre><p>如果显示<code>The requested URL returned error: 403 Forbidden while accessing</code>，则表示没有权限；</p><p>一般这种情况是属于私有项目，没有权限，输入用户名密码，或者远程地址采用这种类型：</p><pre class=" language-powershell"><code class="language-powershell">$ vi <span class="token punctuation">.</span>git<span class="token operator">/</span>config<span class="token comment" spellcheck="true"># 将 </span><span class="token comment" spellcheck="true"># [remote "origin"] </span><span class="token comment" spellcheck="true">#    url = https://github.com/用户名/仓库名.git </span><span class="token comment" spellcheck="true"># 修改为:</span><span class="token comment" spellcheck="true"># [remote "origin"]</span><span class="token comment" spellcheck="true">#    url = https://用户名:密码@github.com/用户名/仓库名.git</span></code></pre><p>下面我用 VSCode 中的项目来做一个实例：</p><p>首先，先在 github 上新建一个与本地项目相同名字的仓库：<br><img src="https://img-blog.csdnimg.cn/20200831134206510.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70#pic_center"><br>进入如下图页面，记得点下 ssh：<br><img src="https://img-blog.csdnimg.cn/20200831134146528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70#pic_center"><br>但是目前还不能运行 git bash ,第一次使用 git 的 clone 或者 push 命令时，连接github会出现一个警告，以致出现一个对话：</p><pre class=" language-powershell"><code class="language-powershell">Are you sure you want to <span class="token keyword">continue</span> connecting <span class="token punctuation">(</span>yes<span class="token operator">/</span>no<span class="token punctuation">)</span>?</code></pre><p>因为 git 使用 ssh 连接，而 ssh 连接第一次连接验证 github 服务器 key 时，需要确认 github 服务器 key 的指纹信息是否真的来自于 github 服务器。</p><p>所以我们需要取得一个 ssh key，而这一步在前面的 Git 配置中已经讲过了；</p><p>所以我们打开以下界面，将代码一行一行复制到 git bash 中：<br><img src="https://img-blog.csdnimg.cn/20200831135453790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70#pic_center"><br>出现图中的 new branch 就证明执行成功了：<br><img src="https://img-blog.csdnimg.cn/20200831135506814.png#pic_center"><br>回到 github 的远程仓库界面，刷新，出现你自己的仓库名称证明建立仓库成功了：<br><img src="https://img-blog.csdnimg.cn/20200831135552406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70#pic_center"><br>另，在输入 <code>git remote add origin **************</code> 时，我报了一个错：</p><pre class=" language-powershell"><code class="language-powershell">fatal: remote origin already exists<span class="token punctuation">.</span>（报错远程起源已经存在。）</code></pre><p>解决办法如下：</p><pre class=" language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true"># 1、先输入 </span>$ git remote <span class="token function">rm</span> origin<span class="token comment" spellcheck="true"># 2、再输入 </span>$ git remote add origin <span class="token operator">*</span>*<span class="token operator">*</span>*<span class="token operator">*</span>*<span class="token operator">*</span>*<span class="token operator">*</span>*<span class="token operator">*</span>*<span class="token operator">*</span><span class="token operator">*</span></code></pre><h2 id="Git-分支命名规范"><a href="#Git-分支命名规范" class="headerlink" title="Git 分支命名规范"></a>Git 分支命名规范</h2><p>git 分支分为集成分支、功能分支和修复分支，分别命名为 develop、feature 和 hotfix，均为单数。</p><ul><li>master（主分支，永远是可用的稳定版本，不能直接在该分支上开发）</li><li>develop（开发主分支，所有新功能以这个分支来创建自己的开发分支，该分支只做只合并操作，不能直接在该分支上开发）</li><li>feature-xxx（功能开发分支，在develop上创建分支，以自己开发功能模块命名，功能测试正常后合并到develop分支）</li><li>feature-xxx-fix(功能bug修复分支，feature分支合并之后发现bug，在develop上创建分支修复，之后合并回develop分支。PS:feature分支在申请合并之后，未合并之前还是可以提交代码的，所以feature在合并之前还可以在原分支上继续修复bug)</li><li>hotfix-xxx（紧急bug修改分支，在master分支上创建，修复完成后合并到 master）</li></ul><blockquote><p>注意事项：<br>一个分支尽量开发一个功能模块，不要多个功能模块在一个分支上开发。<br>feature 分支在申请合并之前，最好是先 pull 一下 develop 主分支下来，看一下有没有冲突，如果有就先解决冲突后再申请合并。</p></blockquote><h2 id="Commit-message-的格式"><a href="#Commit-message-的格式" class="headerlink" title="Commit message 的格式"></a>Commit message 的格式</h2><h3 id="type"><a href="#type" class="headerlink" title="type"></a>type</h3><p>用于说明 commit 的类别，只允许使用下面7个标识。</p><ul><li>feat：新功能（feature）</li><li>fix：修补bug</li><li>docs：文档（documentation）</li><li>style： 格式（不影响代码运行的变动）</li><li>refactor：重构（即不是新增功能，也不是修改bug的代码变动）</li><li>test：增加测试</li><li>chore：构建过程或辅助工具的变动</li></ul><blockquote><p>如果type为feat和fix，则该 commit 将肯定出现在 Change log<br>之中。其他情况（docs、chore、style、refactor、test）由你决定，要不要放入 Change log，建议是不要。</p></blockquote><h2 id="Github-Pages-搭建网站"><a href="#Github-Pages-搭建网站" class="headerlink" title="Github Pages 搭建网站"></a>Github Pages 搭建网站</h2><h3 id="个人站点"><a href="#个人站点" class="headerlink" title="个人站点"></a>个人站点</h3><h4 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h4><p>https://用户名.github.io</p><h4 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h4><ol><li>创建个人站点 -&gt; 新建仓库（注：仓库名称必须是<code>用户名.github.io</code>）；<br><img src="https://img-blog.csdnimg.cn/20200810134029328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></li><li>在仓库下新建 index.hitml 的文件即可；<br><img src="https://img-blog.csdnimg.cn/20200810134202264.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20200810134245835.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20200810134331223.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></li></ol><blockquote><ol><li>github pages 仅支持静态网页；</li><li>仓库里面仅能是 html 文件；</li></ol></blockquote><p>然后我失败了：<br><img src="https://img-blog.csdnimg.cn/20200810135459734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>不知道为啥，害；</p><h3 id="Project-Pages-项目站点"><a href="#Project-Pages-项目站点" class="headerlink" title="Project Pages 项目站点"></a>Project Pages 项目站点</h3><h4 id="访问-1"><a href="#访问-1" class="headerlink" title="访问"></a>访问</h4><p>https://用户名.github.io/仓库名</p><h4 id="搭建步骤-1"><a href="#搭建步骤-1" class="headerlink" title="搭建步骤"></a>搭建步骤</h4><ol><li>进入项目主页，点击 settings；</li><li>在 settings 页面，点击 【Choose a theme】来自动生成主题页面：<br><img src="https://img-blog.csdnimg.cn/20200810135928400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>然后我的页面一直加载不出来，气死我了，就先写到这里吧；</li></ol><p>————————————————————————<br>参照了两篇知乎文：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/38776323?utm_source=wechat_session&amp;utm_medium=social&amp;utm_oi=1136270670114693120">2018-06-30 菜鸟心得之如何将 vscode 与 github 连接实现文件推送</a></li><li><a href="https://zhuanlan.zhihu.com/p/31417255?utm_source=wechat_session&amp;utm_medium=social&amp;utm_oi=1136270670114693120">在 VScode 上配置 Git</a></li></ul><blockquote><p>以上步骤中的图片大部分是引用自这两篇文章，而本人亲自尝试后，最后成功的结果图片是截自自己尝试的结果；</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 安装配置步骤 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组件库 Vant weapp 的使用</title>
      <link href="/2020/08/12/vantweapp-install/"/>
      <url>/2020/08/12/vantweapp-install/</url>
      
        <content type="html"><![CDATA[<h2 id="项目初始化"><a href="#项目初始化" class="headerlink" title="项目初始化"></a>项目初始化</h2><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>新建一个云开发的小程序项目：<br><img src="https://img-blog.csdnimg.cn/20200811140904962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>把不需要的东西都删掉：<br><img src="https://img-blog.csdnimg.cn/20200811141121466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>将 index.wxss 、index.wxml 、index.js 、app.wxss 清空，初始化 index.js：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/**   * 页面的初始数据   */</span>  data<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 生命周期函数--监听页面加载   */</span>  onLoad<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 生命周期函数--监听页面初次渲染完成   */</span>  onReady<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 生命周期函数--监听页面显示   */</span>  onShow<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 生命周期函数--监听页面隐藏   */</span>  onHide<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 生命周期函数--监听页面卸载   */</span>  onUnload<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 页面相关事件处理函数--监听用户下拉动作   */</span>  onPullDownRefresh<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 页面上拉触底事件的处理函数   */</span>  onReachBottom<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 用户点击右上角分享   */</span>  onShareAppMessage<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>将 app.json 改成这样：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"pages"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">"pages/index/index"</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"window"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"backgroundColor"</span><span class="token operator">:</span> <span class="token string">"#F6F6F6"</span><span class="token punctuation">,</span>    <span class="token property">"backgroundTextStyle"</span><span class="token operator">:</span> <span class="token string">"light"</span><span class="token punctuation">,</span>    <span class="token property">"navigationBarBackgroundColor"</span><span class="token operator">:</span> <span class="token string">"#F6F6F6"</span><span class="token punctuation">,</span>    <span class="token property">"navigationBarTitleText"</span><span class="token operator">:</span> <span class="token string">"云开发 QuickStart"</span><span class="token punctuation">,</span>    <span class="token property">"navigationBarTextStyle"</span><span class="token operator">:</span> <span class="token string">"black"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"sitemapLocation"</span><span class="token operator">:</span> <span class="token string">"sitemap.json"</span><span class="token punctuation">,</span>  <span class="token property">"style"</span><span class="token operator">:</span> <span class="token string">"v2"</span><span class="token punctuation">}</span></code></pre><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>打开官网 <a href="https://vant-contrib.gitee.io/vant-weapp/#/intro">https://vant-contrib.gitee.io/vant-weapp/#/intro</a>：<br><img src="https://img-blog.csdnimg.cn/20200811141800645.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>点击快速上手，按照其中的步骤进行操作：<br><img src="https://img-blog.csdnimg.cn/20200811142053123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>打开电脑命令行，确保自己电脑安装过 Node.js ：<br><img src="https://img-blog.csdnimg.cn/20200811142125280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>然后右击项目文件夹，点击【在终端中打开】：<br><img src="https://img-blog.csdnimg.cn/20200811142239339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>先输入：<br><img src="https://img-blog.csdnimg.cn/20200811142940185.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>再输入：<br><img src="https://img-blog.csdnimg.cn/20200811143000819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>点击右上角【详情】-&gt; 【本地设置】-&gt; 勾选【使用 npm 模块】：<br><img src="https://img-blog.csdnimg.cn/20200811143144157.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>最后点击【工具】-&gt;【构建 npm】：<br><img src="https://img-blog.csdnimg.cn/20200812183159749.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>弹出下图这个框即证明该项目建立完毕：<br><img src="https://img-blog.csdnimg.cn/20200812183237484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><h2 id="组件的使用"><a href="#组件的使用" class="headerlink" title="组件的使用"></a>组件的使用</h2><p>文档中的写的很详细，只要看文档基本上都能完成， 我们来示例一下复杂类型的组件使用：</p><p>以<strong>下拉菜单</strong>为例：</p><p>将 app.json 修改：<br><img src="https://img-blog.csdnimg.cn/20200812191811410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>写好 index.wxml：<br><img src="https://img-blog.csdnimg.cn/20200812191855146.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>在 index.js 中写好事件绑定：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/**   * 页面的初始数据   */</span>  data<span class="token punctuation">:</span> <span class="token punctuation">{</span>    show<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    actions<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> <span class="token string">'选项1'</span><span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> <span class="token string">'选项2'</span><span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> <span class="token string">'选项3'</span><span class="token punctuation">,</span>        subname<span class="token punctuation">:</span> <span class="token string">'副文本'</span><span class="token punctuation">,</span>        openType<span class="token punctuation">:</span> <span class="token string">'share'</span><span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    value<span class="token punctuation">:</span><span class="token string">""</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">onTap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>setData <span class="token punctuation">(</span><span class="token punctuation">{</span>      show<span class="token punctuation">:</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">onClose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>setData <span class="token punctuation">(</span><span class="token punctuation">{</span>      show<span class="token punctuation">:</span> <span class="token boolean">false</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">onSelect</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>setData <span class="token punctuation">(</span><span class="token punctuation">{</span>      value<span class="token punctuation">:</span> res<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>name    <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 生命周期函数--监听页面加载   */</span>  onLoad<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 生命周期函数--监听页面初次渲染完成   */</span>  onReady<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 生命周期函数--监听页面显示   */</span>  onShow<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 生命周期函数--监听页面隐藏   */</span>  onHide<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 生命周期函数--监听页面卸载   */</span>  onUnload<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 页面相关事件处理函数--监听用户下拉动作   */</span>  onPullDownRefresh<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 页面上拉触底事件的处理函数   */</span>  onReachBottom<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 用户点击右上角分享   */</span>  onShareAppMessage<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>运行结果如下：<br><img src="https://img-blog.csdnimg.cn/2020081219284788.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>基本操作就是这样啦，掰掰</p>]]></content>
      
      
      <categories>
          
          <category> 安装配置步骤 </category>
          
          <category> 微信小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sass 基础</title>
      <link href="/2020/08/08/sass-install/"/>
      <url>/2020/08/08/sass-install/</url>
      
        <content type="html"><![CDATA[<h2 id="Sass-环境安装和编译"><a href="#Sass-环境安装和编译" class="headerlink" title="Sass 环境安装和编译"></a>Sass 环境安装和编译</h2><p>在安装 Sass 之前要先安装 Ruby，因为 Sass 是基于 Ruby 开发的；</p><p>首先我们先打开 <a href="http://www.ruby-lang.org/zh_cn/">Ruby官网</a>，并按照官网的说明以及<a href="https://www.runoob.com/ruby/ruby-installation-windows.html">菜鸟教程的说明</a>安装 Ruby：<br><img src="https://img-blog.csdnimg.cn/20200805161227505.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>打开 cmd，安装 Sass（需要联网）：<br>在命令提示符输入 <code>gem install sass</code> 回车；<br><img src="https://img-blog.csdnimg.cn/20200805203938339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>验证 Sass 是否安装成功：<br><img src="https://img-blog.csdnimg.cn/20200805204031628.png"><br>安装 compass：<br>在命令提示符输入 <code>gem install compass</code> 回车；<br><img src="https://img-blog.csdnimg.cn/20200805204159171.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>验证 Compass 是否安装成功：<br><img src="https://img-blog.csdnimg.cn/20200805204238154.png"><br>再给 VSCode 安装一个插件就可以了：<br><img src="https://img-blog.csdnimg.cn/20200805204335680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><h2 id="在-Vue-项目中配置-Sass"><a href="#在-Vue-项目中配置-Sass" class="headerlink" title="在 Vue 项目中配置 Sass"></a>在 Vue 项目中配置 Sass</h2><h3 id="安装-Sass-依赖包"><a href="#安装-Sass-依赖包" class="headerlink" title="安装 Sass 依赖包"></a>安装 Sass 依赖包</h3><p>打开 VSCode，新建一个终端，（使用淘宝镜像）安装相关插件：</p><pre class=" language-powershell"><code class="language-powershell">cnpm install sass  <span class="token operator">--</span>save<span class="token operator">-</span>devcnpm install node<span class="token operator">-</span>sass <span class="token operator">--</span>save<span class="token operator">-</span>devcnpm install sass<span class="token operator">-</span>loader <span class="token operator">--</span>save<span class="token operator">-</span>dev</code></pre><h3 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h3><p>打开build文件夹下的webpack.base.conf.js，如下图：<br><img src="https://img-blog.csdnimg.cn/20200805204720455.png"><br>找到module.exports里的module，在rules里添加下面的配置：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token punctuation">{</span>  test<span class="token punctuation">:</span> <span class="token regex">/\.sass$/</span><span class="token punctuation">,</span>  loaders<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'style'</span><span class="token punctuation">,</span> <span class="token string">'css'</span><span class="token punctuation">,</span> <span class="token string">'sass'</span><span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><p>如下图所示：<br><img src="https://img-blog.csdnimg.cn/2020080520481940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><h3 id="修改-style-标签"><a href="#修改-style-标签" class="headerlink" title="修改 style 标签"></a>修改 style 标签</h3><p>在vue文件中修改style标签，即可使用sass；</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scss<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><h2 id="Sass-基础语法"><a href="#Sass-基础语法" class="headerlink" title="Sass 基础语法"></a>Sass 基础语法</h2><p>demo1.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token variable">$abc</span><span class="token symbol">:red</span><span class="token punctuation">;</span><span class="token variable">$efg</span><span class="token symbol">:yellow</span><span class="token punctuation">;</span><span class="token variable">$color</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#e03434;</span><span class="token variable">$width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token variable">$height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token variable">$basewidth</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token variable">$basewidth</span><span class="token punctuation">:</span> 100px <span class="token operator">!</span>default<span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> 默认值<span class="token punctuation">.</span>div <span class="token punctuation">{</span>    color<span class="token punctuation">:</span> <span class="token variable">$abc</span><span class="token punctuation">;</span>    width<span class="token punctuation">:</span> 111px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">.</span>div1 <span class="token punctuation">{</span>    color<span class="token punctuation">:</span> <span class="token variable">$abc</span><span class="token punctuation">;</span>    width<span class="token punctuation">:</span> 110px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">.</span>div2 <span class="token punctuation">{</span>    width<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span> <span class="token variable">$height</span><span class="token punctuation">;</span>    background<span class="token operator">-</span>color<span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>demo1.css</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">111</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div1</span> </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">110</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div2</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#e03434</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>demo2.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token variable">$width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token variable">$height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token variable">$color</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#e03434;</span><span class="token variable">$str</span><span class="token punctuation">:</span> <span class="token string">'hello.jpeg'</span><span class="token punctuation">;</span><span class="token variable">$strNoQout</span><span class="token punctuation">:</span> abc<span class="token punctuation">;</span> <span class="token variable">$class</span><span class="token punctuation">:</span> <span class="token string">'.div'</span><span class="token punctuation">;</span><span class="token variable">$styleKey</span><span class="token punctuation">:</span> <span class="token string">'idth'</span><span class="token punctuation">;</span><span class="token punctuation">.</span>div1 <span class="token punctuation">{</span>    width<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span> <span class="token variable">$height</span><span class="token punctuation">;</span>    background<span class="token operator">-</span>color<span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span>    background<span class="token operator">-</span>image<span class="token punctuation">:</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token string">'./img/'</span> <span class="token operator">+</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    background<span class="token operator">-</span>image<span class="token punctuation">:</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token string">'./img/'</span> <span class="token operator">+</span> <span class="token variable">$strNoQout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    background<span class="token operator">-</span>image<span class="token punctuation">:</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token string">'./img/<span class="token interpolation"><span class="token delimiter tag">#{</span>$strNoQout<span class="token delimiter tag">}</span></span>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>#<span class="token punctuation">{</span><span class="token variable">$class</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>    width<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span> <span class="token variable">$height</span><span class="token punctuation">;</span><span class="token punctuation">}</span>#<span class="token punctuation">{</span><span class="token variable">$class</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>    w#<span class="token punctuation">{</span><span class="token variable">$styleKey</span><span class="token punctuation">}</span><span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>demo2.css</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.div1</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#e03434</span><span class="token punctuation">;</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url("./img/hello.jpeg")</span><span class="token punctuation">;</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url("./img/abc")</span><span class="token punctuation">;</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url("./img/abc")</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>demo3.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token variable">$width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token variable">$color</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#ffe932;</span><span class="token punctuation">.</span>div1 <span class="token punctuation">{</span>    width<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>    <span class="token variable">$widthInner</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    width<span class="token punctuation">:</span> <span class="token variable">$widthInner</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>demo3.css</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.div1</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>demo4.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token operator">/</span><span class="token operator">/</span> <span class="token variable">@import</span> <span class="token string">'org.css'</span><span class="token punctuation">;</span><span class="token variable">@import</span> <span class="token string">'_base.scss'</span><span class="token punctuation">;</span><span class="token variable">$width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token variable">$color</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#ffe932;</span><span class="token punctuation">.</span>div <span class="token punctuation">{</span>    width<span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>_base.scss</p><pre class=" language-ruby"><code class="language-ruby">body <span class="token punctuation">{</span>    margin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    padding<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>demo4.css</p><pre class=" language-css"><code class="language-css"><span class="token selector">body </span><span class="token punctuation">{</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="Sass-常见的基本数据类型"><a href="#Sass-常见的基本数据类型" class="headerlink" title="Sass 常见的基本数据类型"></a>Sass 常见的基本数据类型</h2><h3 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h3><pre class=" language-ruby"><code class="language-ruby"><span class="token variable">$width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token variable">$zoomValue</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> number<span class="token punctuation">.</span>div <span class="token punctuation">{</span>    width<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>    zoom<span class="token punctuation">:</span> <span class="token variable">$zoomValue</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="颜色类型"><a href="#颜色类型" class="headerlink" title="颜色类型"></a>颜色类型</h3><pre class=" language-ruby"><code class="language-ruby"><span class="token variable">$color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token variable">$colorHex</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#ffe932;</span><span class="token operator">/</span><span class="token operator">/</span> color<span class="token punctuation">.</span>div <span class="token punctuation">{</span>    color<span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span>    background<span class="token operator">-</span>color<span class="token punctuation">:</span> <span class="token variable">$colorHex</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><pre class=" language-ruby"><code class="language-ruby"><span class="token variable">$str</span><span class="token punctuation">:</span> <span class="token string">'hello.jpeg'</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> string<span class="token punctuation">.</span>div <span class="token punctuation">{</span>    background<span class="token operator">-</span>image<span class="token punctuation">:</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token string">'images/'</span> <span class="token operator">+</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="数组类型"><a href="#数组类型" class="headerlink" title="数组类型"></a>数组类型</h3><pre class=" language-ruby"><code class="language-ruby"><span class="token variable">$list</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>100px<span class="token punctuation">,</span>200px<span class="token punctuation">,</span><span class="token string">'string'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> <span class="token constant">Sass</span> 数组的下标是从<span class="token number">1</span>开始的<span class="token operator">/</span><span class="token operator">/</span> list<span class="token punctuation">.</span>div <span class="token punctuation">{</span>    width<span class="token punctuation">:</span> <span class="token function">nth</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span> <span class="token function">nth</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    zoom<span class="token punctuation">:</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">,</span> <span class="token string">'string'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="map类型"><a href="#map类型" class="headerlink" title="map类型"></a>map类型</h3><pre class=" language-ruby"><code class="language-ruby"><span class="token variable">$map</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>top<span class="token punctuation">:</span> 1px<span class="token punctuation">,</span> left<span class="token punctuation">:</span> 2px<span class="token punctuation">,</span> bottom<span class="token punctuation">:</span> 3px<span class="token punctuation">,</span> right<span class="token punctuation">:</span> 4px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> map<span class="token punctuation">.</span>div <span class="token punctuation">{</span>    top<span class="token punctuation">:</span> map<span class="token operator">-</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">,</span> top<span class="token punctuation">)</span><span class="token punctuation">;</span>    left<span class="token punctuation">:</span> map<span class="token operator">-</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">,</span> left<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">.</span>div <span class="token punctuation">{</span>    <span class="token variable">@each</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$value</span> <span class="token keyword">in</span> <span class="token variable">$map</span> <span class="token punctuation">{</span>        #<span class="token punctuation">{</span><span class="token variable">$key</span><span class="token punctuation">}</span><span class="token punctuation">:</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="demo-css"><a href="#demo-css" class="headerlink" title="demo.css"></a>demo.css</h3><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#ffe932</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url("images/hello.jpeg")</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>  <span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">1</span>px<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">1</span>px<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span>  <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">4</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="Sass-加减乘除基本运算"><a href="#Sass-加减乘除基本运算" class="headerlink" title="Sass 加减乘除基本运算"></a>Sass 加减乘除基本运算</h2><p>demo.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token variable">$num1</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token variable">$num2</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token variable">$width</span><span class="token punctuation">:</span> <span class="token variable">$num1</span> <span class="token operator">+</span> <span class="token variable">$num2</span><span class="token punctuation">;</span><span class="token variable">$color1</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#010203;</span><span class="token variable">$color2</span><span class="token punctuation">:</span><span class="token comment" spellcheck="true">#040506;</span><span class="token variable">$color3</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#a69e61;</span><span class="token variable">$str</span><span class="token punctuation">:</span> <span class="token string">'hello.jpeg'</span><span class="token punctuation">;</span><span class="token punctuation">.</span>div <span class="token punctuation">{</span>    width<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">/</span> 加减乘除<span class="token punctuation">.</span>div <span class="token punctuation">{</span>    font<span class="token punctuation">:</span> 10px<span class="token operator">/</span>8px<span class="token punctuation">;</span>     <span class="token operator">/</span><span class="token operator">/</span>wrong    font<span class="token punctuation">:</span> <span class="token punctuation">(</span>10px<span class="token operator">/</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    font<span class="token punctuation">:</span> <span class="token punctuation">(</span>10px<span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    font<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>    margin<span class="token operator">-</span>left<span class="token punctuation">:</span> <span class="token punctuation">(</span>5px <span class="token operator">+</span> 8px<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">/</span> 颜色运算<span class="token punctuation">.</span>div <span class="token punctuation">{</span>    color<span class="token punctuation">:</span> <span class="token variable">$color1</span> <span class="token operator">+</span> <span class="token variable">$color2</span><span class="token punctuation">;</span>   <span class="token operator">/</span><span class="token operator">/</span>wrong    <span class="token operator">/</span><span class="token operator">/</span> 混合两种颜色    color<span class="token punctuation">:</span> <span class="token function">mix</span><span class="token punctuation">(</span><span class="token variable">$color1</span><span class="token punctuation">,</span> <span class="token variable">$color2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token operator">/</span><span class="token operator">/</span> 获取rbg    color<span class="token punctuation">:</span> <span class="token function">red</span><span class="token punctuation">(</span><span class="token variable">$color1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    color<span class="token punctuation">:</span> <span class="token function">green</span><span class="token punctuation">(</span><span class="token variable">$color1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    color<span class="token punctuation">:</span> <span class="token function">blue</span><span class="token punctuation">(</span><span class="token variable">$color1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    color<span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token variable">$color3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">green</span><span class="token punctuation">(</span><span class="token variable">$color3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">blue</span><span class="token punctuation">(</span><span class="token variable">$color3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">/</span> 字符串<span class="token punctuation">.</span>div <span class="token punctuation">{</span>    background<span class="token operator">-</span>image<span class="token punctuation">:</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token string">'images/'</span> <span class="token operator">+</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>demo.css</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">font</span><span class="token punctuation">:</span> <span class="token number">10</span>px/<span class="token number">8</span>px<span class="token punctuation">;</span>  <span class="token property">font</span><span class="token punctuation">:</span> <span class="token number">1.25</span>px<span class="token punctuation">;</span>  <span class="token property">font</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>  <span class="token property">font</span><span class="token punctuation">:</span> <span class="token number">150</span>px<span class="token punctuation">;</span>  <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">9</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#050709</span><span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#030405</span><span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#a69e61</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url("images/hello.jpeg")</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="Mixin（混合宏）用法"><a href="#Mixin（混合宏）用法" class="headerlink" title="Mixin（混合宏）用法"></a>Mixin（混合宏）用法</h2><p>demo.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token operator">/</span><span class="token operator">/</span> 一般mixin<span class="token variable">@mixin</span> helloMixin <span class="token punctuation">{</span>    display<span class="token punctuation">:</span> inline<span class="token operator">-</span>block<span class="token punctuation">;</span>    font<span class="token punctuation">:</span> <span class="token punctuation">{</span>        size<span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        weight<span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    color<span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">/</span> 嵌套mixin<span class="token variable">@mixin</span> helloMixin2 <span class="token punctuation">{</span>    padding<span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token variable">@include</span> helloMixin<span class="token punctuation">;</span>    background<span class="token operator">-</span>color<span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">/</span> 参数mixin<span class="token variable">@mixin</span> sexy<span class="token operator">-</span><span class="token function">border</span><span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">,</span> <span class="token variable">$width</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    border<span class="token punctuation">:</span> <span class="token punctuation">{</span>        color<span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span>        width<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>        style<span class="token punctuation">:</span> dashed<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">.</span>div <span class="token punctuation">{</span>    width<span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token variable">@include</span> helloMixin2<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">.</span>div <span class="token punctuation">{</span>    <span class="token variable">@include</span> sexy<span class="token operator">-</span><span class="token function">border</span><span class="token punctuation">(</span>blue<span class="token punctuation">,</span> 2px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>demo.css</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">border-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>  <span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span>  <span class="token property">border-style</span><span class="token punctuation">:</span> dashed<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="Sass-继承和嵌套"><a href="#Sass-继承和嵌套" class="headerlink" title="Sass 继承和嵌套"></a>Sass 继承和嵌套</h2><h3 id="嵌套"><a href="#嵌套" class="headerlink" title="嵌套"></a>嵌套</h3><p>demo.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token variable">$width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token variable">$color</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#fff;</span><span class="token punctuation">.</span>div1 <span class="token punctuation">{</span>    width<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>    background<span class="token operator">-</span>color<span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span>    <span class="token punctuation">.</span>div<span class="token operator">-</span>inner <span class="token punctuation">{</span>        width<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>        height<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>        background<span class="token operator">-</span>color<span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span>div<span class="token operator">-</span>inner<span class="token operator">-</span>inner <span class="token punctuation">{</span>            width<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>            height<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>            background<span class="token operator">-</span>color<span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    a <span class="token punctuation">{</span>        color<span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">.</span>div1<span class="token punctuation">{</span>    width<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>    background<span class="token operator">-</span>color<span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span>    <span class="token punctuation">.</span>div<span class="token operator">-</span>inner <span class="token punctuation">{</span>        border<span class="token punctuation">:</span> <span class="token punctuation">{</span>            left<span class="token punctuation">:</span> 1px solid <span class="token comment" spellcheck="true">#000;</span>            top<span class="token punctuation">:</span> 2px solid <span class="token comment" spellcheck="true">#000;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        background<span class="token punctuation">:</span> <span class="token punctuation">{</span>            image<span class="token punctuation">:</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token string">'abc.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            color<span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#000;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>demo.css</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.div1</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div1</span> <span class="token class">.div-inner</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div1</span> <span class="token class">.div-inner</span> <span class="token class">.div-inner-inner</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div1</span> a </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div1</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div1</span> <span class="token class">.div-inner</span> </span><span class="token punctuation">{</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#000</span><span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">2</span>px solid <span class="token hexcode">#000</span><span class="token punctuation">;</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url("abc.png")</span><span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><h4 id="简单继承"><a href="#简单继承" class="headerlink" title="简单继承"></a>简单继承</h4><p>demo.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token operator">/</span><span class="token operator">/</span> 简单继承<span class="token punctuation">.</span>div <span class="token punctuation">{</span>    border<span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>    background<span class="token operator">-</span>color<span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">.</span>divext <span class="token punctuation">{</span>    <span class="token variable">@extend</span> <span class="token punctuation">.</span>div<span class="token punctuation">;</span>    border<span class="token operator">-</span>width<span class="token punctuation">:</span> 3px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="关联属性继承"><a href="#关联属性继承" class="headerlink" title="关联属性继承"></a>关联属性继承</h4><p>demo.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token operator">/</span><span class="token operator">/</span> 关联属性继承<span class="token punctuation">.</span>div1 <span class="token punctuation">{</span>    border<span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>    background<span class="token operator">-</span>color<span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">.</span>div1<span class="token punctuation">.</span>other <span class="token punctuation">{</span>    background<span class="token operator">-</span>image<span class="token punctuation">:</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token string">'hello.jpeg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">.</span>divext <span class="token punctuation">{</span>    <span class="token variable">@extend</span> <span class="token punctuation">.</span>div1<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="链式继承"><a href="#链式继承" class="headerlink" title="链式继承"></a>链式继承</h4><p>demo.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token operator">/</span><span class="token operator">/</span> 链式继承<span class="token punctuation">.</span>div1 <span class="token punctuation">{</span>    border<span class="token punctuation">:</span> 1px solid <span class="token comment" spellcheck="true">#000;</span><span class="token punctuation">}</span><span class="token punctuation">.</span>div2 <span class="token punctuation">{</span>    <span class="token variable">@extend</span> <span class="token punctuation">.</span>div1<span class="token punctuation">;</span>    color<span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">.</span>div3 <span class="token punctuation">{</span>    <span class="token variable">@extend</span> <span class="token punctuation">.</span>div2<span class="token punctuation">;</span>    color<span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#000;</span><span class="token punctuation">}</span></code></pre><h4 id="伪类继承"><a href="#伪类继承" class="headerlink" title="伪类继承"></a>伪类继承</h4><p>demo.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token operator">/</span><span class="token operator">/</span> 伪类继承a<span class="token symbol">:hover</span> <span class="token punctuation">{</span>    text<span class="token operator">-</span>decoration<span class="token punctuation">:</span> underline<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token symbol">:hoverlink</span> <span class="token punctuation">{</span>    color<span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token variable">@extend</span> <span class="token symbol">:hover</span><span class="token punctuation">}</span></code></pre><h4 id="demo-css-1"><a href="#demo-css-1" class="headerlink" title="demo.css"></a>demo.css</h4><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.div</span>, <span class="token class">.divext</span> </span><span class="token punctuation">{</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.divext</span> </span><span class="token punctuation">{</span>  <span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div1</span>, <span class="token class">.divext</span>, <span class="token class">.div2</span>, <span class="token class">.div3</span> </span><span class="token punctuation">{</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div1.other</span>, <span class="token class">.other.divext</span>, <span class="token class">.other.div2</span>, <span class="token class">.other.div3</span> </span><span class="token punctuation">{</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url("hello.jpeg")</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div1</span>, <span class="token class">.divext</span>, <span class="token class">.div2</span>, <span class="token class">.div3</span> </span><span class="token punctuation">{</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#000</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div2</span>, <span class="token class">.div3</span> </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div3</span> </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">a<span class="token pseudo-class">:hover</span>, a<span class="token pseudo-class">:hoverlink</span> </span><span class="token punctuation">{</span>  <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token pseudo-class">:hoverlink</span> </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="Sass-条件控制"><a href="#Sass-条件控制" class="headerlink" title="Sass 条件控制"></a>Sass 条件控制</h2><p>@if，@for，@while，@each 等条件控制语句；</p><h3 id="if"><a href="#if" class="headerlink" title="@if"></a>@if</h3><p>demo.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token operator">/</span><span class="token operator">/</span> <span class="token keyword">if</span><span class="token variable">$type</span><span class="token punctuation">:</span> <span class="token string">'tony'</span><span class="token punctuation">;</span>p <span class="token punctuation">{</span>    <span class="token variable">@if</span> <span class="token variable">$type</span> <span class="token operator">==</span> <span class="token string">'bufy'</span> <span class="token punctuation">{</span>        color<span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token variable">@else</span> <span class="token keyword">if</span> <span class="token variable">$type</span> <span class="token operator">==</span> <span class="token string">'tim'</span> <span class="token punctuation">{</span>        color<span class="token punctuation">:</span> blue<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token variable">@else</span> <span class="token keyword">if</span> <span class="token variable">$type</span> <span class="token operator">==</span> <span class="token string">'tony'</span> <span class="token punctuation">{</span>        color<span class="token punctuation">:</span> green<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token variable">@else</span> <span class="token punctuation">{</span>        color<span class="token punctuation">:</span> black<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">@if</span> <span class="token variable">$type</span> <span class="token operator">==</span> <span class="token string">'bufy'</span> <span class="token punctuation">{</span>    <span class="token punctuation">.</span>div <span class="token punctuation">{</span>        color<span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token variable">@else</span> <span class="token punctuation">{</span>    <span class="token punctuation">.</span>div <span class="token punctuation">{</span>        color<span class="token punctuation">:</span> blue<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="for"><a href="#for" class="headerlink" title="@for"></a>@for</h3><p>demo.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token operator">/</span><span class="token operator">/</span> <span class="token keyword">for</span><span class="token variable">@for</span> <span class="token variable">$i</span> from <span class="token number">1</span> through <span class="token number">3</span> <span class="token punctuation">{</span>      <span class="token operator">/</span><span class="token operator">/</span>through包括<span class="token number">3</span>    <span class="token punctuation">.</span>item#<span class="token punctuation">{</span><span class="token variable">$i</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>        width<span class="token punctuation">:</span> 1px <span class="token operator">*</span> <span class="token variable">$i</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">@for</span> <span class="token variable">$i</span> from <span class="token number">1</span> to <span class="token number">3</span> <span class="token punctuation">{</span>       <span class="token operator">/</span><span class="token operator">/</span>to不包括<span class="token number">3</span>    <span class="token punctuation">.</span>item#<span class="token punctuation">{</span><span class="token variable">$i</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>        width<span class="token punctuation">:</span> 1px <span class="token operator">*</span> <span class="token variable">$i</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">/</span> <span class="token keyword">for</span> list<span class="token variable">$list</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">@for</span> <span class="token variable">$i</span> from <span class="token number">1</span> through <span class="token function">length</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">.</span>item#<span class="token punctuation">{</span><span class="token variable">$i</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>        width<span class="token punctuation">:</span> 1px <span class="token operator">*</span> <span class="token variable">$i</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="while"><a href="#while" class="headerlink" title="@while"></a>@while</h3><p>demo.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token operator">/</span><span class="token operator">/</span> <span class="token keyword">while</span><span class="token variable">$i</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">;</span><span class="token variable">@while</span> <span class="token variable">$i</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token punctuation">{</span>    <span class="token punctuation">.</span>item#<span class="token punctuation">{</span><span class="token variable">$i</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>        width<span class="token punctuation">:</span> 1px <span class="token operator">*</span> <span class="token variable">$i</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$i</span><span class="token punctuation">:</span> <span class="token variable">$i</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="each"><a href="#each" class="headerlink" title="@each"></a>@each</h3><p>demo.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token operator">/</span><span class="token operator">/</span> <span class="token keyword">each</span><span class="token variable">$map</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>top<span class="token punctuation">:</span> 1px<span class="token punctuation">,</span> left<span class="token punctuation">:</span> 2px<span class="token punctuation">,</span> bottom<span class="token punctuation">:</span> 3px<span class="token punctuation">,</span> right<span class="token punctuation">:</span> 4px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">.</span>div <span class="token punctuation">{</span>    <span class="token variable">@each</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$value</span> <span class="token keyword">in</span> <span class="token variable">$map</span> <span class="token punctuation">{</span>        #<span class="token punctuation">{</span><span class="token variable">$key</span><span class="token punctuation">}</span><span class="token punctuation">:</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="demo-css-2"><a href="#demo-css-2" class="headerlink" title="demo.css"></a>demo.css</h3><pre class=" language-css"><code class="language-css"><span class="token selector">p </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item1</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">1</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item2</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item3</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item1</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">1</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item2</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item1</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">1</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item2</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item3</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item4</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">4</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item5</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item6</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">6</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item4</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">4</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item2</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">1</span>px<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span>  <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">4</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="Sass-函数"><a href="#Sass-函数" class="headerlink" title="Sass 函数"></a>Sass 函数</h2><h3 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h3><h4 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h4><ul><li>unquote($string)：去除引号；</li><li>quote($string)：添加引号；</li><li>str-length($string)：获取字符串长度；</li><li>str-insert($string, $insert, $index)：在指定位置插入字符；</li><li>str-index($string, $substring)：返回指定字符在字符串的位置；</li><li>to-upper-case($string)：转换成大写；</li><li>to-lower-case($string)：转换成小写；</li></ul><p>demo.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token operator">/</span><span class="token operator">/</span> string<span class="token variable">$string</span><span class="token punctuation">:</span> <span class="token string">'hello'</span><span class="token punctuation">;</span><span class="token variable">$stringNo</span><span class="token punctuation">:</span> hello<span class="token punctuation">;</span><span class="token variable">$stringUP</span><span class="token punctuation">:</span> <span class="token string">'HELLO'</span><span class="token punctuation">;</span><span class="token punctuation">.</span>div <span class="token punctuation">{</span>    background<span class="token operator">-</span>image<span class="token punctuation">:</span> <span class="token function">unquote</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    background<span class="token operator">-</span>image<span class="token punctuation">:</span> <span class="token function">quote</span><span class="token punctuation">(</span><span class="token variable">$stringNo</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    background<span class="token operator">-</span>image<span class="token punctuation">:</span> str<span class="token operator">-</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">@debug</span> str<span class="token operator">-</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token string">'p'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">@debug</span> str<span class="token operator">-</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token variable">$substring</span><span class="token punctuation">:</span> <span class="token string">"l"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    background<span class="token operator">-</span>image<span class="token punctuation">:</span> to<span class="token operator">-</span>upper<span class="token operator">-</span><span class="token keyword">case</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    background<span class="token operator">-</span>image<span class="token punctuation">:</span> to<span class="token operator">-</span>lower<span class="token operator">-</span><span class="token keyword">case</span><span class="token punctuation">(</span><span class="token variable">$stringUP</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>demo.css</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> hello<span class="token punctuation">;</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token string">"hello"</span><span class="token punctuation">;</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">;</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token string">"HELLO"</span><span class="token punctuation">;</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token string">"hello"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="数字函数"><a href="#数字函数" class="headerlink" title="数字函数"></a>数字函数</h4><ul><li>percentage($number)：转换成百分比；</li><li>round($number)：执行标准舍入，即它总是将数值四舍五入为最接近的整数；</li><li>ceil($number)：执行向上舍入，即它总是将数值向上舍入为最接近的整数；</li><li>floor($number)：执行向下舍入，即它总是将数值向下舍入为最接近的整数；</li><li>abs($number)：获取绝对值；</li><li>min($number)：获取最小值；</li><li>max($number)：获取最大值；</li><li>random()：获得随机数；</li></ul><p>demo.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token variable">$number</span><span class="token punctuation">:</span> <span class="token number">70</span><span class="token punctuation">;</span><span class="token variable">$number2</span><span class="token punctuation">:</span> <span class="token number">71</span><span class="token punctuation">;</span><span class="token variable">$numberPercent</span><span class="token punctuation">:</span> <span class="token number">0.77</span><span class="token punctuation">;</span><span class="token variable">$numberRound</span><span class="token punctuation">:</span> <span class="token number">25.9</span><span class="token punctuation">;</span><span class="token variable">$abs</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">.</span>div <span class="token punctuation">{</span>    zoom<span class="token punctuation">:</span> <span class="token function">percentage</span><span class="token punctuation">(</span><span class="token variable">$numberPercent</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    zoom<span class="token punctuation">:</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token variable">$numberRound</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    zoom<span class="token punctuation">:</span> <span class="token function">ceil</span><span class="token punctuation">(</span><span class="token variable">$numberRound</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    zoom<span class="token punctuation">:</span> <span class="token function">percentage</span><span class="token punctuation">(</span><span class="token variable">$numberRound</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    zoom<span class="token punctuation">:</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token variable">$abs</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    zoom<span class="token punctuation">:</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token variable">$number</span><span class="token punctuation">,</span> <span class="token variable">$number2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    zoom<span class="token punctuation">:</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token variable">$number</span><span class="token punctuation">,</span> <span class="token variable">$number2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    zoom<span class="token punctuation">:</span> <span class="token function">random</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token operator">/</span><span class="token operator">/</span>在<span class="token number">0</span>到<span class="token number">10</span>之间取随机整数    zoom<span class="token punctuation">:</span> <span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token operator">/</span><span class="token operator">/</span>在<span class="token number">0</span>到<span class="token number">1</span>之间取随机数<span class="token punctuation">}</span></code></pre><p>demo.css</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">77%</span><span class="token punctuation">;</span>  <span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">26</span><span class="token punctuation">;</span>  <span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">26</span><span class="token punctuation">;</span>  <span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">2590%</span><span class="token punctuation">;</span>  <span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">;</span>  <span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">70</span><span class="token punctuation">;</span>  <span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">71</span><span class="token punctuation">;</span>  <span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">;</span>  <span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">0.60628</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="数组函数"><a href="#数组函数" class="headerlink" title="数组函数"></a>数组函数</h4><ul><li>length($list)：获取数组长度；</li><li>nth($list, $n)：获取指定下标的元素，下标从 1 开始；</li><li>set-nth($list, $n, $value)：替换指定下标的元素；</li><li>join($list1, $list2)：拼接数组；</li><li>append($list1, $val, [ $sesparator])：从数组尾部添加元素；</li><li>index($list, $value)：返回指定元素在数组中的位置；</li></ul><p>demo.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token operator">/</span><span class="token operator">/</span> list<span class="token variable">$list</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'p'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">.</span>div <span class="token punctuation">{</span>    zoom<span class="token punctuation">:</span> <span class="token function">length</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    zoom<span class="token punctuation">:</span> <span class="token function">nth</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">/</span><span class="token operator">/</span>不懂    <span class="token variable">@debug</span> set<span class="token operator">-</span><span class="token function">nth</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'x'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token variable">@debug</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">@debug</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">,</span> <span class="token string">'999'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">@debug</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">,</span> <span class="token string">'p'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>demo.css</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">;</span>  <span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token string">"p"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="map-函数"><a href="#map-函数" class="headerlink" title="map 函数"></a>map 函数</h4><ul><li>map-get($map, $key)：根据给定的 key 值，返回 map 中相关的值；</li><li>map-merge($map1, $map2)：将两个 map 合并成一个新的 map；</li><li>map-remove($map, $key)：从 map 中删除一个 key，返回一个新 map；</li><li>map-keys($map)：返回 map 中所有的 key；</li><li>map-values($map)：返回 map 中所有的 value；</li><li>map-has-key($map, $key)：根据给定的 key 值判断 map 是否有对应的 value 值，如果有返回 true，否则返回 false；</li><li>keywords($args)：返回一个函数的参数，这个参数可以动态的设置 key 和 value；</li></ul><p>demo.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token operator">/</span><span class="token operator">/</span> map<span class="token variable">$map</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>top<span class="token punctuation">:</span> 1px<span class="token punctuation">,</span> left<span class="token punctuation">:</span> 2px<span class="token punctuation">,</span> bottom<span class="token punctuation">:</span> 3px<span class="token punctuation">,</span> right<span class="token punctuation">:</span> 4px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">.</span>div <span class="token punctuation">{</span>    width<span class="token punctuation">:</span> map<span class="token operator">-</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">,</span> top<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">@debug</span> map<span class="token operator">-</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">,</span> bottom<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">@debug</span> map<span class="token operator">-</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">@debug</span> map<span class="token operator">-</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">@debug</span> map<span class="token operator">-</span>has<span class="token operator">-</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">,</span> abc<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">@mixin</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token variable">$args</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">@debug</span> <span class="token function">keywords</span><span class="token punctuation">(</span><span class="token variable">$args</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">@include</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token variable">$arg1</span><span class="token punctuation">:</span><span class="token string">'abc'</span><span class="token punctuation">,</span> <span class="token variable">$arg2</span><span class="token punctuation">:</span><span class="token string">'efg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>demo.css</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">1</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h3><p>demo.scss</p><pre class=" language-ruby"><code class="language-ruby"><span class="token operator">/</span><span class="token operator">/</span> 自定义函数<span class="token variable">$rem1</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token variable">@function</span> <span class="token function">px2rem</span><span class="token punctuation">(</span><span class="token variable">$px</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$rem</span><span class="token punctuation">:</span> <span class="token number">37</span><span class="token punctuation">.</span>5px<span class="token punctuation">;</span>    <span class="token variable">@debug</span> <span class="token variable">$px</span><span class="token punctuation">;</span>    <span class="token variable">@return</span> <span class="token punctuation">(</span><span class="token variable">$px</span><span class="token operator">/</span><span class="token variable">$rem</span><span class="token punctuation">)</span> <span class="token operator">+</span> rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">.</span>div <span class="token punctuation">{</span>    width<span class="token punctuation">:</span> <span class="token function">px2rem</span><span class="token punctuation">(</span><span class="token variable">$rem1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>demo.css</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.div</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">2.66667</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="Sass-页面实战"><a href="#Sass-页面实战" class="headerlink" title="Sass 页面实战"></a>Sass 页面实战</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>详情看前面；</p><h3 id="页面样式-html-编写"><a href="#页面样式-html-编写" class="headerlink" title="页面样式 html 编写"></a>页面样式 html 编写</h3><p>整个项目大约需要这些文件：<br><img src="https://img-blog.csdnimg.cn/2020080818483314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>下面大家参照源码自己试试吧：</p><p>index.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0, maximum-scale<span class="token punctuation">=</span>1.0, user-scaleble<span class="token punctuation">=</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>今日头条<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title_logo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top_bar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top_menu_list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn cur<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>推荐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>视频<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>热点<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>社会<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>娱乐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>军事<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>科技<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>汽车<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>体育<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>财经<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>国际<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>时尚<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content_list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section_item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item_detail<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>一图读懂 | 秀突然单人四排释放哪些重大信号？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item_info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stick_label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>置顶<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>src<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新华社<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cmt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>评论 2473<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>time<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2分钟前<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>images_item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item_detail<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>震惊！嘻嘻帮绵绵冰上分途中竟狂掉200分？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list_image<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list_img_holder<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/img1.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list_img_holder<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/img2.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list_img_holder<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/img3.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item_info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hot_label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>热<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>src<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>青蜂侠<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cmt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>评论 7028<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>time<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1分钟前<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>images_item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item_detail<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>重大消息！钢强王10日假期将尽，原因竟是...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list_image<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list_img_holder<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/img1.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list_img_holder<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/img2.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list_img_holder<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/img3.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item_info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hot_label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>热<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>src<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>青蜂侠<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cmt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>评论 7028<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>time<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1分钟前<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image_item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item_detail<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 沙漠小卖部嗨翻全场，可乐每满99减50，走过路过不要错过！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>one_image<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/img3.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item_info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gg_label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>广告<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>src<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>京东<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cmt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>评论<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>time<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1分钟前<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>图片文件大家可以随意按照自己喜欢的去添加；</p><h3 id="Sass编写和编译"><a href="#Sass编写和编译" class="headerlink" title="Sass编写和编译"></a>Sass编写和编译</h3><p>首先我们需要一个情况所有固有样式的 CSS 文件，因而创建一个 reset.scss，其源码为：</p><pre class=" language-ruby"><code class="language-ruby">html<span class="token punctuation">,</span>body<span class="token punctuation">,</span>div<span class="token punctuation">,</span>span<span class="token punctuation">,</span>object<span class="token punctuation">,</span>button<span class="token punctuation">,</span>iframe<span class="token punctuation">,</span>h1<span class="token punctuation">,</span>h2<span class="token punctuation">,</span>h3<span class="token punctuation">,</span>h4<span class="token punctuation">,</span>h5<span class="token punctuation">,</span>h6<span class="token punctuation">,</span>p<span class="token punctuation">,</span>blockquote<span class="token punctuation">,</span>a<span class="token punctuation">,</span>code<span class="token punctuation">,</span>em<span class="token punctuation">,</span>img<span class="token punctuation">,</span>q<span class="token punctuation">,</span>small<span class="token punctuation">,</span>strong<span class="token punctuation">,</span>dd<span class="token punctuation">,</span>dl<span class="token punctuation">,</span>dt<span class="token punctuation">,</span>li<span class="token punctuation">,</span>ol<span class="token punctuation">,</span>ul<span class="token punctuation">,</span>fieldset<span class="token punctuation">,</span>form<span class="token punctuation">,</span>label<span class="token punctuation">,</span>table<span class="token punctuation">,</span>tbody<span class="token punctuation">,</span>tr<span class="token punctuation">,</span>th<span class="token punctuation">,</span>td<span class="token punctuation">,</span>input <span class="token punctuation">{</span>    margin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    padding<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    border<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>body <span class="token punctuation">{</span>    position<span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token string">%;    overflow: hidden;</span><span class="token punctuation">}</span>ul<span class="token punctuation">,</span>li <span class="token punctuation">{</span>    list<span class="token operator">-</span>style<span class="token operator">-</span>type<span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span>a <span class="token punctuation">{</span>    text<span class="token operator">-</span>decoration<span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">/</span> <span class="token variable">@charset</span> <span class="token string">"utf-8"</span><span class="token punctuation">;</span>html <span class="token punctuation">{</span>    background<span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#fff;</span>    font<span class="token operator">-</span>family<span class="token punctuation">:</span> <span class="token string">'STHeiti'</span><span class="token punctuation">,</span> <span class="token string">'Microsoft YaHei'</span><span class="token punctuation">,</span> <span class="token string">'Helvetica'</span><span class="token punctuation">,</span> <span class="token string">'Arial'</span><span class="token punctuation">;</span>    <span class="token operator">-</span>webkit<span class="token operator">-</span>text<span class="token operator">-</span>size<span class="token operator">-</span>adjust<span class="token punctuation">:</span> none<span class="token punctuation">;</span>    word<span class="token operator">-</span><span class="token keyword">break</span><span class="token punctuation">:</span> <span class="token keyword">break</span><span class="token operator">-</span>word<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>然后是 html 基本样式的 index.scss：</p><pre class=" language-ruby"><code class="language-ruby"><span class="token variable">@import</span> <span class="token string">'./reset.scss'</span><span class="token punctuation">;</span><span class="token variable">$baseFontSize</span><span class="token punctuation">:</span> 17px<span class="token punctuation">;</span><span class="token variable">$redColor</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#d43d3d;</span><span class="token variable">$blueColor</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#2a90d7;</span><span class="token variable">$assetsDir</span><span class="token punctuation">:</span> <span class="token string">'assets'</span><span class="token punctuation">;</span><span class="token variable">@mixin</span> sectionStyle <span class="token punctuation">{</span>    margin<span class="token operator">-</span>left<span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    margin<span class="token operator">-</span>right<span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    border<span class="token operator">-</span>bottom<span class="token punctuation">:</span> 1px solid <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">211</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    padding<span class="token operator">-</span>top<span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    padding<span class="token operator">-</span>bottom<span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">@mixin</span> <span class="token function">hotLabel</span><span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    font<span class="token operator">-</span>size<span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    color<span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span>    border<span class="token punctuation">:</span> 1px solid <span class="token variable">$color</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">@mixin</span> line2 <span class="token punctuation">{</span>    overflow<span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    text<span class="token operator">-</span>overflow<span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>    <span class="token operator">/</span><span class="token operator">/</span>当文字超出就用省略号的方式    display<span class="token punctuation">:</span> <span class="token operator">-</span>webkit<span class="token operator">-</span>box<span class="token punctuation">;</span>    display<span class="token punctuation">:</span> box<span class="token punctuation">;</span>    <span class="token operator">-</span>webkit<span class="token operator">-</span>box<span class="token operator">-</span>orient<span class="token punctuation">:</span> vertical<span class="token punctuation">;</span>    <span class="token operator">-</span>webkit<span class="token operator">-</span>line<span class="token operator">-</span>clamp<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">@mixin</span> clearfix <span class="token punctuation">{</span>    <span class="token operator">/</span><span class="token operator">/</span> <span class="token operator">&amp;</span> 是其父元素的意思    <span class="token operator">&amp;</span><span class="token symbol">:after</span> <span class="token punctuation">{</span>        visibility<span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        display<span class="token punctuation">:</span> block<span class="token punctuation">;</span>        content<span class="token punctuation">:</span> <span class="token string">" "</span><span class="token punctuation">;</span>        clear<span class="token punctuation">:</span> both<span class="token punctuation">;</span>        height<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">@mixin</span> commonImg <span class="token punctuation">{</span>    border<span class="token punctuation">:</span> none<span class="token punctuation">;</span>    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token string">%;    display: block;</span><span class="token punctuation">}</span><span class="token punctuation">.</span>header <span class="token punctuation">{</span>    height<span class="token punctuation">:</span> 45px<span class="token punctuation">;</span>    background<span class="token operator">-</span>color<span class="token punctuation">:</span> <span class="token variable">$redColor</span><span class="token punctuation">;</span>    <span class="token punctuation">.</span>title_logo <span class="token punctuation">{</span>        width<span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token string">%;        margin: 0 auto;</span>        background<span class="token punctuation">:</span> <span class="token punctuation">{</span>            position<span class="token punctuation">:</span> center<span class="token punctuation">;</span>            size<span class="token punctuation">:</span> contain<span class="token punctuation">;</span>            repeat<span class="token punctuation">:</span> no<span class="token operator">-</span>repeat<span class="token punctuation">;</span>            image<span class="token punctuation">:</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token variable">$assetsDir</span> <span class="token operator">+</span> <span class="token string">'/title.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">.</span>top_bar <span class="token punctuation">{</span>    background<span class="token operator">-</span>color<span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#f4f5f6;</span>    height<span class="token punctuation">:</span> 34px<span class="token punctuation">;</span>    overflow<span class="token operator">-</span>x<span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    overflow<span class="token operator">-</span>y<span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token punctuation">.</span>top_menu_list <span class="token punctuation">{</span>        white<span class="token operator">-</span>space<span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>    <span class="token operator">/</span><span class="token operator">/</span>不换行        overflow<span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token string">%;        display: inline-block;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>btn <span class="token punctuation">{</span>        padding<span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>        display<span class="token punctuation">:</span> inline<span class="token operator">-</span>block<span class="token punctuation">;</span>        font<span class="token operator">-</span>size<span class="token punctuation">:</span> <span class="token variable">$baseFontSize</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span><span class="token punctuation">.</span>cur <span class="token punctuation">{</span>            color<span class="token punctuation">:</span> <span class="token variable">$redColor</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">.</span>content_list <span class="token punctuation">{</span>    <span class="token punctuation">.</span>section_item <span class="token punctuation">{</span>        <span class="token variable">@include</span> sectionStyle<span class="token punctuation">;</span>        <span class="token punctuation">.</span>title <span class="token punctuation">{</span>            font<span class="token operator">-</span>size<span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token punctuation">.</span>item_info_base <span class="token punctuation">{</span>            color<span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#999;</span>            font<span class="token operator">-</span>size<span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token punctuation">.</span>item_info <span class="token punctuation">{</span>            margin<span class="token operator">-</span>top<span class="token punctuation">:</span> 11px<span class="token punctuation">;</span>            <span class="token variable">@extend</span> <span class="token punctuation">.</span>item_info_base<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token punctuation">.</span>stick_label <span class="token punctuation">{</span>            <span class="token variable">@include</span> <span class="token function">hotLabel</span><span class="token punctuation">(</span><span class="token variable">$redColor</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>        <span class="token punctuation">.</span>src <span class="token punctuation">{</span>            <span class="token variable">@extend</span> <span class="token punctuation">.</span>item_info_base<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>        <span class="token punctuation">.</span>images_item <span class="token punctuation">{</span>        <span class="token variable">@extend</span> <span class="token punctuation">.</span>section_item<span class="token punctuation">;</span>        <span class="token punctuation">.</span>title <span class="token punctuation">{</span>            <span class="token variable">@include</span> line2<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token punctuation">.</span>list_image <span class="token punctuation">{</span>            margin<span class="token operator">-</span>top<span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token punctuation">.</span>list_img_holder <span class="token punctuation">{</span>            float<span class="token punctuation">:</span> left<span class="token punctuation">;</span>            width<span class="token punctuation">:</span> <span class="token number">32</span><span class="token string">%;            height: 50px;</span>            margin<span class="token operator">-</span>right<span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>            img <span class="token punctuation">{</span>                <span class="token variable">@include</span> commonImg<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        ul <span class="token punctuation">{</span>            <span class="token variable">@include</span> clearfix<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token punctuation">.</span>hot_label <span class="token punctuation">{</span>            <span class="token variable">@include</span> <span class="token function">hotLabel</span><span class="token punctuation">(</span><span class="token variable">$redColor</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>image_item <span class="token punctuation">{</span>        <span class="token variable">@extend</span> <span class="token punctuation">.</span>section_item<span class="token punctuation">;</span>        <span class="token punctuation">.</span>one_image <span class="token punctuation">{</span>            height<span class="token punctuation">:</span> 160px<span class="token punctuation">;</span>            margin<span class="token operator">-</span>top<span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            img <span class="token punctuation">{</span>                <span class="token variable">@include</span> commonImg<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token punctuation">.</span>gg_label <span class="token punctuation">{</span>            <span class="token variable">@include</span> <span class="token function">hotLabel</span><span class="token punctuation">(</span><span class="token variable">$blueColor</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>.css 文件会自动生成的，这里就不展示了；</p><p>最后，生成的页面如下图所示：<br><img src="https://img-blog.csdnimg.cn/20200808185213529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>就这样啦，掰掰；</p>]]></content>
      
      
      <categories>
          
          <category> 安装配置步骤 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序入门基础与实践</title>
      <link href="/2020/05/30/wx-start/"/>
      <url>/2020/05/30/wx-start/</url>
      
        <content type="html"><![CDATA[<h2 id="小程序开发工具与基础"><a href="#小程序开发工具与基础" class="headerlink" title="小程序开发工具与基础"></a>小程序开发工具与基础</h2><p><strong>小程序开发准备：</strong></p><ol><li>申请小程序账号（ appid ）</li><li>下载并安装微信开发者工具</li></ol><p>具体步骤如下：</p><ul><li>先进入 <a href="https://mp.weixin.qq.com/">微信公众平台</a> ，下拉页面，把鼠标悬浮在小程序图标上<br><img src="https://img-blog.csdnimg.cn/2020053011533742.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></li><li>然后点击 <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/">小程序开发文档</a><br><img src="https://img-blog.csdnimg.cn/20200530115427561.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></li><li>照着里面给的步骤，就可以申请到小程序账号了。</li><li>然后就可以下载 <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html">开发者工具</a> 了</li><li>下载完打开后的界面就是这个样子<br><img src="https://img-blog.csdnimg.cn/20200530121537636.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>下面让我们来新建一个小程序开发项目：<br><img src="https://img-blog.csdnimg.cn/20200530141309224.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></li></ul><p>在AppID输入自己刚刚注册的AppID就可以，或者使用测试号，创建后的页面是这样的：<br><img src="https://img-blog.csdnimg.cn/20200530130222155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p><h2 id="编写第一个小程序页面"><a href="#编写第一个小程序页面" class="headerlink" title="编写第一个小程序页面"></a>编写第一个小程序页面</h2><p>包括的知识点有：</p><ul><li>小程序文件类型与目录结构</li><li>注册小程序页面，View、Image、Text 等组件的基本用法</li><li>Flex 弹性盒子模型</li><li>移动端分辨率及小程序自适应单位 RPX</li></ul><p>先把多余的东西删掉<br><img src="https://img-blog.csdnimg.cn/20200530130429651.png"><br>再重新新建 app.js 、app.json、app.wxss 文件<br><img src="https://img-blog.csdnimg.cn/20200530130540918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>再在 pages 文件里新建一个 welcome 目录，把文件建全<br><img src="https://img-blog.csdnimg.cn/20200530130757627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>打开 <a href="https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html">微信开放文档</a> ，点击框架，查看小程序的配置<br><img src="https://img-blog.csdnimg.cn/20200530131445860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>将红框的代码复制到 app.json 中，再针对自己创建的目录进行修改：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"pages"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"pages/welcome/welcome"</span><span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><p>打开 welcome.json，因为 json 文件不能为空，所以加上一个花括号，或者可以删除 json 文件：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><p>再打开 welcome.js 文件，加入以下代码：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>最后在 welcome.wxml 文件中加入以下代码：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">></span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span></code></pre><p>就会出现这个界面啦：<br><img src="https://img-blog.csdnimg.cn/20200530132257442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"><br>在根目录下新建一个 images 文件夹，存放图片，然后调用图片；<br>再在 welcome.wxml 上加入以下代码：</p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- wxml 是用来编写页面骨架的文件 --></span><span class="token comment" spellcheck="true">&lt;!-- 在小程序中 view 的功能基本上是等同于 div 的，主要功能有容器、分隔文档 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>rpx<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>rpx<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/images/image.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">></span></span>Hello, Jessie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- &lt;button>&lt;/button> --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">></span></span>开启小程序之旅<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span></code></pre><p>下面我们尝试将样式的代码都转移到 welcome.wxss 文件中：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.container</span></span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#b3d4db</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">page</span><span class="token punctuation">{</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#b3d4db</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.user-image</span></span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>rpx<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>rpx<span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">160</span>rpx<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.user-name</span></span><span class="token punctuation">{</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">60</span>rpx<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">32</span>rpx<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.moto</span></span><span class="token punctuation">{</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">22</span>rpx<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">80</span>rpx<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#405f80</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.moto-container</span></span><span class="token punctuation">{</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#405f80</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">80</span>rpx<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>rpx<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">200</span>rpx<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* flex 布局 弹性盒子模型 */</span></code></pre><p>再补充一下 app.wxss 文件内的代码：</p><pre class=" language-css"><code class="language-css"><span class="token selector">text</span><span class="token punctuation">{</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> MicroSoft Yahei<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>再打开 app.json 更改一下顶部状态栏的颜色：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"pages"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"pages/welcome/welcome"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"window"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"navigationBarBackgroundColor"</span><span class="token operator">:</span> <span class="token string">"#b3d4db"</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>下面是 welcome.wxml 的代码：</p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- wxml 是用来编写页面骨架的文件 --></span><span class="token comment" spellcheck="true">&lt;!-- 在小程序中 view 的功能基本上是等同于 div 的，主要功能有容器、分隔文档 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user-image<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/images/mayor.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user-name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello, Jessie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- &lt;button>&lt;/button> --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>moto-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>moto<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>开启小程序之旅<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span></code></pre><p>我们的第一个小程序页面就做好啦：<br><img src="https://img-blog.csdnimg.cn/20200530140656576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plc3NpZWVlZWVlZQ==,size_16,color_FFFFFF,t_70"></p>]]></content>
      
      
      <categories>
          
          <category> 安装配置步骤 </category>
          
          <category> 微信小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
